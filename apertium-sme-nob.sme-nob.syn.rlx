#Distributed under the terms of the GNU General Public License version 2 
# or any later version.

# ==================================================================== #
#    N O R T H E R N  S Á M I  D I S A M B I G U A T O R               
# ==================================================================== #
# ==================================================================== 

#  Sámi language technology project 2003-2006, University of Tromsø # 


# ========== #
# Delimiters #
# ========== #

DELIMITERS = "<.>" "<!>" "<?>" "<...>" "<¶>";

#PARENTHESES = "<$(>" "<$)>" "<$[>" "<$]>" "<${>" "<$}>" "<$«>" "<$»>" ;

# ============= #
# Tags and sets #
# ============= #

SETS

# I define end of clause and beginning of clause in a way so that the file
# may be read both by the CG-2 and the vislcg formalisms.

LIST BOS = (>>>) (<s>);
LIST EOS = (<<<) (</s>);

# CG3 doesn´t function without >>> and <<< !

# Tags declared as single-membered LISTs 
# ======================================

# Parts of speech
# ---------------

LIST N = n ;
LIST A = a ;
LIST Adv = adv ;
LIST V = v ;
LIST Pron = pron ;

LIST CS = cs ;
LIST CC = cc ;
SET CC-CS = CC OR CS ;
LIST Po = po ;
LIST Pr = pr ;
LIST Pcle = pcle ;
LIST Num = num ;
LIST Interj = interj ;
LIST ABBR = abbr ;
LIST ACR = acr ;

LIST CLB = clb ;
LIST LEFT = left ;
LIST RIGHT = right ;
LIST WEB = web ;
LIST QMARK = """ ; # add " for syntax colouring.
LIST PPUNCT = punct ;
SET PUNCT = PPUNCT - QMARK ;

LIST COMMA = "," ;
LIST ¶ = ¶;

#LIST V* = V* ;

#!! * Sets for POS sub-categories
# ------------------

LIST Pers = pers ;
LIST Dem = dem ;
LIST Interr = interr ;
LIST Indef = indef ;

LIST Recipr = recipr ;
LIST Refl = refl ;
LIST Rel = rel ;
 
#LIST Adp = Adp ;

LIST Coll = coll ;
LIST NomAg = nomag ;
LIST G3 = g3 ;
LIST Prop = prop ;

#!! * Sets for Semantic tags
# -------------

LIST Sem_Ani = sem_ani ;
LIST Sem_Date = sem_date ;
LIST Sem_Fem = sem_fem ;
LIST Sem_Group = sem_group ;
LIST Sem_Hum = sem_hum ;
LIST Sem_Mal = sem_mal ;
LIST Sem_Measr = sem_measr ;
LIST Sem_Money = sem_money ;
LIST Sem_Obj = sem_obj ;
LIST Sem_Org = sem_org ;
LIST Sem_Plc = sem_plc ;
LIST Sem_Sur = sem_sur ;
LIST Sem_Time = sem_time ;
LIST Sem_Year = sem_year ;
SET FIRSTNAME = (prop sem_fem) OR (prop sem_mal) ;

LIST TIME-N-SET = (n sem_time) ;
LIST NOT-TIME = "dulvi" "lohpi" "vuorru" ;
SET TIME-N = TIME-N-SET - NOT-TIME ;


LIST HUMAN = sem_hum sem_mal sem_fem sem_sur pers numag der_numag ;

#!! * Sets for Morphosyntactic properties
# --------------------------

LIST Nom = nom ;
LIST Acc = acc ;
LIST Gen = gen ;
LIST Ill = ill ;
LIST Loc = loc ;
LIST Com = com ;
LIST Ess = ess ;
LIST Ine = ine ;
LIST Ela = ela ;

LIST LOC = loc ine ela ;

LIST Sg = sg ;
LIST Du = du ;
LIST Pl = pl ;

LIST RCmpnd = rcmpnd ;

LIST Cmpnd = cmpnd ;
 
LIST SgNomCmp = sgnomcmp ;
 
LIST SgGenCmp = sggencmp ;

LIST ShCmp = shcmp ;

LIST PxSg1 = pxsg1 ;
LIST PxSg2 = pxsg2 ;
LIST PxSg3 = pxsg3 ;
 
LIST PxDu1 = pxdu1 ;
LIST PxDu2 = pxdu2 ;
LIST PxDu3 = pxdu3 ;
 
LIST PxPl1 = pxpl1 ;
LIST PxPl2 = pxpl2 ;
LIST PxPl3 = pxpl3 ;

LIST Comp = comp ;
LIST Superl = superl ;

LIST Attr = attr ;
LIST Ord = ord ;
 
LIST Qst = qst ;
 
# The ("ge" Pcle) etc. are used in Apertium
LIST Foc_ge = foc_ge ("ge" pcle) ;
LIST Foc_gen = foc_gen ("gen" pcle) ;
LIST Foc_ges = foc_ges ("ges" pcle) ;
LIST Foc_gis = foc_gis ("gis" pcle) ;
LIST Foc_naj = foc_naj ("naj" pcle) ;
LIST Foc_ba = foc_ba ("ba" pcle) ;
LIST Foc_be = foc_be ("be" pcle) ;
LIST Foc_hal = foc_hal ("hal" pcle) ;
LIST Foc_han = foc_han ("han" pcle) ;
LIST Foc_bat = foc_bat ("bat" pcle) ;
LIST Foc_son = foc_son ("son" pcle) ;

LIST IV = iv ;
LIST TV = tv ;

LIST Der_Pass = der_passl der_passs ;

LIST Prt = prt;
LIST Prs = prs ;
 

LIST Ind = ind ;
LIST Pot = pot ;
LIST Cond = cond ;

LIST Imprt = imprt ;
LIST ImprtII = imprtii ;

LIST Sg1 = sg1 ;
LIST Sg2 = sg2 ;
LIST Sg3 = sg3 ;

LIST Du1 = du1 ;
LIST Du2 = du2 ;
LIST Du3 = du3 ;

LIST Pl1 = pl1 ;
LIST Pl2 = pl2 ;
LIST Pl3 = pl3 ;

LIST Inf = inf ;
LIST ConNeg = conneg ;
LIST Neg = neg ;

LIST PrfPrc = prfprc ;
LIST VGen = vgen ;

LIST PrsPrc = prsprc ;
 

LIST Ger = ger ;
LIST Sup = sup ;
LIST Actio = actio ;

LIST Der_PassL = der_passl ;
LIST Der_NomAg = der_nomag ;
LIST Actor = nomag der_nomag ;
LIST VAbess = vabess ;

# Derivation
# ----------

LIST Der_adda = der_adda ;
LIST Der_ahtti = der_ahtti ;
LIST Der_alla = der_alla ;
LIST Der_asti = der_asti ;
LIST Der_easti = der_easti ;
LIST Der_d = der_d ;
LIST Der_NomAct = der_nomact ;
LIST Der_eamoš = der_eamoš ;
LIST Der_amoš = der_amoš ;
LIST Der_eapmi = der_eapmi ;
LIST Der_geahtes = der_geahtes ;
LIST Der_gielat = der_gielat ;
LIST !better: = !better: ;
LIST Der_NuA = der_nua ;

LIST Der_h = der_h ;
LIST Der_heapmi = der_heapmi ;
LIST Der_hudda = der_hudda ;
LIST Der_huhtti = der_huhtti ;
LIST Der_huvva = der_huvva ;
LIST Der_halla = der_halla ;
LIST Der_j = der_j ;
LIST Der_l = der_l ;
LIST Der_laš = der_laš ;
LIST Der_las = der_las ;
LIST Der_hat = der_hat ;

LIST Der_meahttun = der_meahttun ;
LIST Der_muš = der_muš ;
LIST Der_n = der_n ;
LIST Der_st = der_st ;
LIST Der_stuvva = der_stuvva ;
LIST Der_upmi = der_upmi ;
LIST Der_supmi = der_supmi ;
LIST Der_vuohta = der_vuohta ;
LIST Der_goahti = der_goahti ;

LIST Der_lágan = der_lágan ;
LIST Der_lágán = der_lágán ;
LIST Der_lágaš = der_lágaš ;
LIST Der_jagáš = der_jagáš ;
LIST Der_jahkásaš = der_jahkásaš ;
LIST Der_diibmosaš = der_diibmosaš ;

LIST Der_Dimin = der_dimin ;
LIST Der_viđá = der_viđá ;
LIST Der_viđi = der_viđi ;
LIST Der_veara = der_veara ;
LIST Der_duohke = der_duohke ;
LIST Der_duohkai = der_duohkai ;
LIST Der_vuolle = der_vuolle ;
LIST Der_vuollai = der_vuollai ;
LIST Der_vuolde = der_vuolde ;

# Syntactic tags
# --------------

LIST @+FAUXV = @+FAUXV ;
LIST @+FMAINV = @+FMAINV ;
LIST @-FAUXV = @-FAUXV ;
 
LIST @-FMAINV = @-FMAINV ;
LIST @-FSUBJ→ = @-FSUBJ→ ;
LIST @-F←OBJ = @-F←OBJ ;
LIST @-FOBJ→ = @-FOBJ→ ;
LIST @SPRED←OBJ = @SPRED←OBJ ;
LIST @-FADVL = @-FADVL ;

SET FOBJ = @-F←OBJ OR @-FOBJ→ ; 
SET FMAINV = @-FMAINV OR @+FMAINV OR (v @←obj) OR (v @n←) OR (v @a←) OR (v @←subj) OR (v @←advl) ;
SET FAUXV = @-FAUXV OR @+FAUXV ;

LIST @ADVL = @ADVL @ADVL→ @ADVL← @←ADVL @→ADVL @-F←ADVL ;
LIST @→ADVL = @→ADVL ;
LIST @ADVL← = @ADVL← ;
LIST @←ADVL = @←ADVL ;
LIST @ADVL→ = @ADVL→ ;
LIST @ADVL→CS = @ADVL→CS ;

LIST ←hab→ = ←hab→ ;
LIST ←ext→ = ←ext→ ;

 
LIST HAB-V-TAGS = pl3 sg3 conneg prfprc inf ;
 
LIST @→N = @→N ;

LIST @N← = @N← ;
 

LIST @→A = @→A ;

LIST @P← = @P← ;

LIST @→P = @→P ;

LIST @HNOUN = @HNOUN ;
LIST @INTERJ = @INTERJ ;
 
LIST @→Num = @→Num;

LIST @Pron← = @Pron← ;
LIST @→Pron = @→Pron ;

LIST @Num← = @Num← ;

LIST @OBJ = @OBJ ;
LIST @←OBJ = @←OBJ ;
LIST @OBJ→ = @OBJ→ ;
LIST @OPRED = @OPRED ;
LIST @←OPRED = @←OPRED ;
LIST @OPRED→ = @OPRED→ ;
LIST @PCLE = @PCLE ;
LIST @COMP-CS← = @COMP-CS← ;
 
LIST @SPRED = @SPRED ;
LIST @←SPRED = @←SPRED ;
LIST @SPRED→ = @SPRED→ ;
LIST @SUBJ = @SUBJ ;
LIST @←SUBJ = @←SUBJ ;
LIST @SUBJ→ = @SUBJ→ ;
SET SUBJ = @←SUBJ OR @SUBJ→ OR @SUBJ ;
SET SPRED = @←SPRED OR @SPRED→ OR @SPRED ;
SET OPRED = @←OPRED OR @OPRED→ OR @OPRED ;

LIST @PPRED = @PPRED ;
 
LIST @APP = @APP ;
LIST @APP-N← = @APP-N← ;
LIST @APP-Pron← = @APP-Pron← ;
LIST @APP→Pron = @APP→Pron ;
LIST @APP-Num← = @APP-Num← ;
LIST @APP-ADVL← = @APP-ADVL← ;
LIST @VOC = @VOC ;

LIST @CVP = @CVP ;
LIST @CNP = @CNP ;

SET OBJ = (@←obj) OR (@obj→) OR (@obj) OR (@-f←obj) OR (@-fobj→) ;
LIST ←OBJ = @-F←OBJ @←OBJ ;
LIST OBJ→ = @OBJ→ @-FOBJ→ ;

SET ←OBJ-OTHERS = ←OBJ OR (gen) OR (nom) OR (ess) OR (loc) OR (adv) OR (ine) OR (ela) ;
SET OBJ→-OTHERS = OBJ→ OR (gen) OR (nom) OR (ess) OR (loc) OR (adv) OR (ine) OR (ela) ;

SET SYN-V = V + SUBJ OR OBJ + V OR @ADVL + V OR (v @n←) OR (v @a←) OR V + SPRED OR (v @comp-cs←) ;


LIST @X = @X ;


LIST OKTA = "akta" "okta";
LIST go = "go" ;
 

# Initials
# --------

LIST INITIAL = "a" "b" "c" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m"
"n" "o" "p" "q" "r" "s" "t" "u" "v" "w" "x" "y" "z"
"á" "æ" "ø" "å" "ö" "ä" ;

LIST CAP-INITIAL = "A" "B" "C" "D" "E" "F" "G" "H" "I" "J" "K" "L" "M"
"N" "O" "P" "Q" "R" "S" "T" "U" "V" "W" "X" "Y" "Z"
"Á" "Æ" "Ø" "Å" "Ö" "Ä" ;

# Tag sets
# ========
  SETS
# ========


# Word or not
# -----------
LIST WORD = n a adv v pron cs cc po pr interj pcle num abbr acr \? ;
 # any word

SET REALWORD = WORD - Num - Ord ;

SET REALWORD-NOTABBR = WORD - Num - Ord - ABBR ;

SET WORD-NOTDE = WORD - ("de") ; 

# Verb sets
# ---------

# Verbs and their complements
# - - - - - - - - - - - - - -

SET NOT-VERB = WORD - V ;

# Finiteness and mood
# - - - - - - - - - -

SET V-IND-FIN = Prs OR Prt ;
 # Problem: "In boahtán" is an invisible indicative

SET V-MOOD = Ind OR Pot OR Imprt OR ImprtII OR Cond OR (neg sup) ;

LIST GC = ("gč") ;

SET VFIN = GC OR V-MOOD - ConNeg ;

SET VFIN-POS = V-MOOD - ConNeg - Neg ;

SET VFIN-NOT-IMP = VFIN - Imprt ;

SET VFIN-NOT-NEG = VFIN - Neg ;
  # this might be to strict, besides, "iige" can be written "ii ge"

SET NOT-PRFPRC = WORD - PrfPrc ;

# Person
# - - - - 

LIST V-SG1 = (v ind prs sg1) (v ind prt sg1) (v cond prs sg1) 
(v cond prt sg1) (v pot prs sg1) (v neg ind sg1) ;
 
LIST V-SG2 = (v ind prs sg2) (v ind prt sg2) (v cond prs sg2) 
(v cond prt sg2) (v pot prs sg2) (v neg ind sg2) ;
 
LIST V-SG3 = (v ind prs sg3) (v ind prt sg3) (v cond prs sg3) 
(v cond prt sg3) (v pot prs sg3) (v neg ind sg3) ;
 
LIST V-DU1 = (v ind prs du1) (v ind prt du1) (v cond prs du1) 
	 (v cond prt du1) (v pot prs du1) (v neg ind du1) ;
 
LIST V-DU2 = (v ind prs du2) (v ind prt du2) (v cond prs du2) 
	 (v cond prt du2) (v pot prs du2) (v neg ind du2) ;
 
LIST V-DU3 = (v ind prs du3) (v ind prt du3) (v cond prs du3) 
	 (v cond prt du3) (v pot prs du3) (v neg ind du3) ;
 
LIST V-PL1 = (v ind prs pl1) (v ind prt pl1) (v cond prs pl1) 
(v cond prt pl1) (v pot prs pl1) (v neg ind pl1) ;
 
LIST V-PL2 = (v ind prs pl2) (v ind prt pl2) (v cond prs pl2) 
(v cond prt pl2) (v pot prs pl2) (v neg ind pl2) ;
 
LIST V-PL3 = (v ind prs pl3) (v ind prt pl3) (v cond prs pl3) 
(v cond prt pl3) (v pot prs pl3) (v neg ind pl3) ;
 

 # Note that imperative verbs are not included in these sets!

# Some subsets of the VFIN sets
# - - - - - - - - - - - - - - -
SET V-SG = V-SG1 OR V-SG2 OR V-SG3 ;
SET V-DU = V-DU1 OR V-DU2 OR V-DU3 ;
SET V-PL = V-PL1 OR V-PL2 OR V-PL3 ;

SET V-DU-PL = V-DU1 OR V-DU2 OR V-DU3 OR V-PL1 OR V-PL2 OR V-PL3 ;

SET V-NOT-SG1 = VFIN-NOT-IMP - V-SG1 ;
SET V-NOT-SG2 = VFIN-NOT-IMP - V-SG2 ;
SET V-NOT-SG3 = VFIN-NOT-IMP - V-SG3 ;
SET V-NOT-DU1 = VFIN-NOT-IMP - V-DU1 ;
SET V-NOT-DU2 = VFIN-NOT-IMP - V-DU2 ;
SET V-NOT-DU3 = VFIN-NOT-IMP - V-DU3 ;
SET V-NOT-PL1 = VFIN-NOT-IMP - V-PL1 ;
SET V-NOT-PL2 = VFIN-NOT-IMP - V-PL2 ;
SET V-NOT-PL3 = VFIN-NOT-IMP - V-PL3 ;


SET V-1-2 = V-SG1 OR V-SG2 OR V-DU1 OR V-DU2 OR V-PL1 OR V-PL2 ;
SET V-3 = V-SG3 OR V-DU3 OR V-PL3 ;

# Sets consisting of LEAT
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
LIST LEAT = "leat" "liehket" "lea" ;

SET LEAT-FIN-NOT-IMP = LEAT - Imprt;
 
LIST VPRFPRC = (v prfprc) ;
LIST LEATPRFPRC = ("leat" prfprc) ("liehket" prfprc) ("lea" prfprc) ;
SET PRC-NOT-LEAT = VPRFPRC - LEATPRFPRC ;
    # In order to distinguish between real leat-constructions and participles of other verbs
LIST HABEO-SG3 = ("leat" sg3) (v neg sg3) ("šaddat" sg3) ("sjaddat" sg3) ("liehket" sg3) ("lea" sg3) ;

LIST HABEO-PL3 = ("leat" pl3) (v neg pl3) ("šaddat" pl3) ("sjaddat" pl3) ("liehket" pl3) ("lea" pl3) ;

SET HABEO-3 = HABEO-SG3 OR HABEO-PL3 ;

# Pronoun sets
# ------------

LIST MUN = (pron pers sg1 nom) ;
LIST DON = (pron pers sg2 nom) ;
LIST SON = ("son" pron pers sg3 nom) ;
LIST MOAI = (pron pers du1 nom) ;
LIST DOAI = (pron pers du2 nom) ;
LIST SOAI = (pron pers du3 nom) ;
LIST MII-PERS = (pron pers pl1 nom) ;
LIST DII = (pron pers pl2 nom) ;
LIST SII = ("son" pron pers pl3 nom) ;

SET PPRON-NOM-NOT-DAT = MUN OR DON OR SON OR MOAI OR DOAI OR SOAI OR MII-PERS OR DII OR SII ;

SET PPRON-NOT-DAT = (pron pers) - ("dat") ;

SET PPRON-DU-PL = MOAI OR DOAI OR SOAI OR MII-PERS OR DII OR SII ;
SET PPRON-PL = MII-PERS OR DII OR SII ;

SET PRON-DU = MOAI OR DOAI OR SOAI ;

SET PPRON-NOT-SII = MUN OR DON OR SON OR MOAI OR DOAI OR SOAI OR MII-PERS OR DII ;

LIST PPRON-GEN = (sg1 gen) (sg2 gen) (sg3 gen) (du1 gen) (du2 gen) (du3 gen) 
	 (pl1 gen) (pl2 gen) (pl3 gen) ;

SET PPRON-NOT-GEN = (pron pers) - PPRON-GEN ;

LIST DEM-SG = (pron dem sg nom) ;
LIST DEM-PL = (pron dem pl nom) ;
SET NOT-DEM = WORD - Dem ;

LIST SGPRON = (pron sg1) (pron sg2) (pron sg3) (pron sg) (pron pxsg1) (pron pxsg2) (pron pxsg3) ;
LIST DUPRON = (pron du1) (pron du2) (pron du3) (pron pxdu1) (pron pxdu2) (pron pxdu3) ;
LIST PLPRON = (pron pl1) (pron pl2) (pron pl3) (pron pl) (pron pxpl1) (pron pxpl2) (pron pxpl3) ;
LIST DUPRON-NOTPX = (pron du1) (pron du2) (pron du3) ;

SET PRON-NOT-SG = DUPRON OR PLPRON ;

LIST DAT-PRON = ("dat") ("dát") ("diet") ("duot") ("dot") ;

LIST QUANT-PRON = "ollu" "olu" "unnán" "váháš" "veaháš" "veháš" ;
# This set is for choosing between Adv and Pron Indef.

# Adjectival sets and their complements
# -------------------------------------

SET NOT-A = WORD - A ;
SET NOT-A-COMMA = WORD - A - COMMA ;
SET NOT-Attr = WORD - Attr ;
SET NOT-A-PCLE = WORD - A - Pcle ;

SET NOT-A-ADV = WORD - A - Adv OR ("maid") ;

LIST NOMINAL-ADJ = "guoktilaš" "lámis" "oasálaš" ("suddu" der_laš) "viissis";
 
 # and many others
 
# Adverbial sets and their complements
# ------------------------------------
SET LEX-ADV = Adv - (a*) ;

SET NOT-ADV-DE = WORD - Adv ;
SET NOT-ADV = NOT-ADV-DE OR ("de" adv) OR CLB ;
SET NOT-ADV-N = NOT-ADV - N;
SET NOT-ADV-PCLE = NOT-ADV - Pcle ;
SET NOT-ADV-INDEF = NOT-ADV - Indef ;
SET NOT-ADV-PCLE-ILL = WORD - Adv - Pcle - Ill ;
SET NOT-ADV-PCLE-Refl = WORD - Adv - Pcle - Refl ;
SET NOT-ADV-PCLE-INDEF = WORD - Adv - Pcle - Indef ;
SET NOT-ADV-PCLE-NEG = WORD - Adv - Pcle - Neg ;
SET NOT-ADVL-PCLE-NEG = WORD - @ADVL - @P← - Pcle - Neg ;


LIST MO-MANge = "goas" "gokko" "gos" "gosa" "govt" "makkár" "man" "manne" ("manin" adv) "mo" "mot" "mov" "movt" ("nugo" @cvp) (v qst) ;
 
SET MO = MO-MANge - ("man" foc_ge) ; 
 
 # Introduce finite clauses.
 
LIST PLACE-ADV = "davá#bealde" "mátta#bealde" "nuortta#bealde" "oarje#bealde" "olggo#beale" ;
# There will usually be a Gen in front. 

LIST TIME-ADVL = "dalle" "diibmá" "dolin" "dovle" "duvle" "eske" "gieskat" "ikte" "ovdal" ("ovdditbeaivi" gen) ("vássánáigi" loc) ("boaresáigi" gen) "dál" "ihttin" "odne" "otne" ("boahtteáigi" loc) ("boahtteáigi" gen) ;

LIST TIME-ADV = (adv sem_time) ;


LIST DOPPE = "badjin" "bajil" "dakko" "dá" "dákko" "dáppe" "diekko" "dieppe" "do" "dokko" "doppe" "duo" "duokko" "duoppe" "olgun" ;
# Adverbs with a locativic form, but don´t get Loc as a tag. 

LIST DOHKO = "bajás" "deike" "diehke" "diehko" "dohko" "duohko" "lulás" "olggos" "ruoktot" "sisa" "vuovdimassii" ;
# Adverbs with a illativic form, but they don´t get Ill as a tag.


# Coordinators
# ------------
SET Foc = Foc_ge OR Foc_gen OR Foc_ges OR Foc_gis OR Foc_naj OR Foc_ba OR Foc_be OR Foc_hal OR Foc_han OR Foc_bat OR Foc_son ;

LIST NEGFOC = (neg foc_ge) ;

LIST XGO = "dego" "dugo" "nugo" "seammaládjego" "seammaláhkaigo" ;
  # Compounds
LIST SEAMMAX = "seamma#ládje" "seamma#láhkai" "seamma#láhkái" ;
  # Those combine with go
  
LIST MADE = "mađe" "mađi" ;
LIST DADE = "dađe" "dađi" ; 
  
 
SET CRD = @CNP OR COMMA OR NEGFOC OR XGO OR ("_") OR ("-") OR DADE ;
    # AFTER LCRD vs. GCRD disambiguation
    

LIST ADV-AFTER-NUM = "geardde" ;

LIST DUSSE = "áibbas" "dušše" "erenoamážit" "goitge" "man" "measta" "meastui" "oalle" "oba" "oktiibuot" "oppa" "sullii" ;

LIST GRADE-ADV = "áibbas" "beare" ("eanet" adv) "erenoamán" "erenoamáš" "hirbmat" "hui" "ila" "issoras" ("man" adv) ("mealgat" adv) "measta" "menddo" "muđui" "muhtun_muddui" "nu" "oalle" "oba" ("oppa" adv) "sakka" "seammá" ("veaháš" adv) ("uhccán" adv) ("unnán" adv) "vehá" "veháš" "veahá" "veaháš" "viehka" ;

LIST BUOT = "buot" "gait" "gaitin" "gaitdivnnat" "visot" ;


LIST EASKKA = "easkka" ("easka" adv) ; 

LIST ADV-NOT-ARG = "aiddo" "ain" "aivve" "albma" "aŋkke" "álggos" "bái#fáhkka" "beanta" "beare" ;



LIST ADV-NOT-VERB = "dušše" "viimmat" ;

LIST ADV-NOT-NOUN = "easka" "várra" ;

LIST ADV-NOT-NAMES = "Ain" "Anne" "Diego" "Dieppe" "Enge" "Galle" "Haga"
"Joba" "Johan" "Liikka" "Mai" "Mannes" "Mo" "Mot" "Naba"
"Nan" "Oktan" "Sierra" "Sokka" "Villa" ;

SET ADV-NOT-OTHER-POS = ADV-NOT-VERB OR ADV-NOT-NOUN OR ADV-NOT-NAMES ;

LIST HAB-CASE = loc (←smj→ ine) (←sma→ gen) ;
LIST HAB-ACTOR-ALL = sem_hum sem_mal sem_sur sem_fem sem_ani pers ("gii") indef coll ;
SET HAB-ACTOR = HAB-ACTOR-ALL - ("cihca") ;
SET HAB-ACTOR-NOT-HUMAN = Sem_Org ;

# Sets of elements with common syntactic behaviour
# ================================================

SETS

#!! * Sets for verbs
# -----

LIST NOT-REAL-V = (actio nom) (actio gen) (actio loc) (actio com) prsprc ;

SET REAL-V = V - NOT-REAL-V ;
  #!! ** V is all readings with a V tag in them, REAL-V should
  #!! be the ones without an N tag following the V.  
  #!! The REAL-V set thus awaits a fix to the preprocess V ... N bug.
            
 
 # The set REAL is smaller than COPULAS, made for verbs with PrfPrc complements: Seammás REAL-COPULAS son dovdan iežas...
LIST REAL-COPULAS = "dáidit" "leat" "soaitit" "veadjit" "liehket" "lea";

#!! * The set COPULAS is for predicative constructions
LIST COPULAS = "dáidit" "gártat" "leat" "soaitit" "šaddat" "orrut" "veadjit" "liehket" "sjaddat" "lea" "sjïdtedh" ;
 #  "bissut" ? 
 # 'Dáidit' can appear without 'leat'.

SET NOT-COP-V = V - COPULAS ;

SET MAIN-V = V - FAUXV ;
 
# All active verbs with a TV tag, including AUX-OR-MAIN.

LIST V-TRANS = (v tv) (iv der_ahtti) (iv der_h) ;


SET TRANS-V = V-TRANS - Der_Pass + REAL-V ;

#!! * NP sets defined according to their morphosyntactic features
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 


LIST N-SG-NOM = (n sg nom) ;

SET HEAD-N = N - RCmpnd ;

SET HEAD-N-NOM = (n nom) - RCmpnd ;

SET SUBJECTHEAD = N OR A OR Pron - Refl ; # These, can be subject heads

SET NP = N OR A ; # anything that can take except numerals
SET NP-HEAD = Pron OR HEAD-N - ("buorre") ;
SET NP-HEAD-SG = SGPRON OR (n sg) OR (a sg) - RCmpnd - Dem - ("buorre") ;
SET NP-HEAD-PL = PLPRON OR (n pl) OR (a pl) - RCmpnd - Dem - ("buorre") ;
SET NP-HEAD-SG-NOM = SGPRON + Nom OR (n sg nom) OR (a sg nom) - ("buorre") - RCmpnd ;
SET NP-HEAD-PL-NOM = PLPRON + Nom OR (n pl nom) OR (a pl nom) - RCmpnd - ("buorre") ;
SET NP-HEAD-NOM = NP-HEAD-SG-NOM OR NP-HEAD-PL-NOM ;
SET NP-HEAD-ACC = (pron acc) OR (n acc) OR (a acc) - RCmpnd - (dem attr) - ("buorre") ;
SET NP-HEAD-GEN = (pron gen) OR (n gen) OR (a gen) - Der_NomAct - RCmpnd - (dem attr) - ("buorre") ;

#!! * The PRE-NP-HEAD family of sets

#!! These sets model noun phrases (NPs). The idea is to first define whatever can
#!! occur in front of the head of the NP, and thereafter negate that with the
#!! expression __WORD - premodifiers__.


SET PRE-NP-HEAD = (prop attr) OR (prop @→n) OR (a attr) OR (abbr attr) OR ("buorre") 
OR (pron pers gen) OR (n gen) OR (a gen) OR ("buot") OR
Num OR RCmpnd OR CC OR (pron dem) OR (pron refl gen) OR (indef attr) OR 
(prfprc @→n) OR PrsPrc OR (a ord) OR (num @→n) OR (a @→n) OR @→N OR @→A OR @→Pron OR @Num← OR (cc @cnp) OR (@→cc) OR (action gen) OR (@pron←) ;
         # The strict version of items that can only be premodifiers, not parts of the predicate

#LIST PRE-NP-HEAD = @>N @>A @>Pron @Num< @CNP ;
         
SET PRE-NP-V = PrfPrc OR PrsPrc OR Der_NomAg OR Actio OR Der_NomAct OR (v a) OR (ind prs sg3) OR (ind prs sg1) OR (imprt du2) ;
    # to be used together with PRE-NP-HEAD before @>N is disambiguated
         
SET NP-MEMBER = PRE-NP-HEAD OR N ;

SET PRE-A-N = (pron pers gen) OR (pron pers acc) OR (pron indef) OR Num OR (a ord) OR (pron dem) OR (pron refl gen) OR (pron refl acc) ; # Acc pga av manglende disambiguering tidlig i fila

SET NOT-PRE-A-N = WORD - PRE-A-N ;

LIST PUNCT-LEFT = (punct left) ;
LIST PUNCT-RIGHT = (punct right) ;

SET PRE-APP = COMMA OR PUNCT-LEFT OR PRE-NP-HEAD ;
 # This set ist not only for what can
                            # stand in front of appositions but also
                            # postmodifiers.



#!! The set __NOT-NPMOD__ is used to find barriers between NPs.
#!! Typical usage: ... (*1 N BARRIER NPT-NPMOD) ...
#!! meaning: Scan to the first noun, ignoring anything that can be
#!! part of the noun phrase of that noun (i.e., "scan to the next NP head")

SET NOT-NPMOD = WORD - PRE-NP-HEAD OR ABBR ; 
# This is the previous NPNH (npnh) set.
# NOT-NPMOD  = "NOT-PRE-NP-HEAD"
 
SET NOT-NPMOD-ACC = NOT-NPMOD - Acc OR ABBR ; 
SET NOT-NPMOD-ACC-ADV = NOT-NPMOD - Acc - Adv OR ABBR ; 
# To be used in mappingrules, before the disambuation of Acc and Gen.                     

SET NOT-NPMODADV = WORD - PRE-NP-HEAD - Adv ; 
# NOT-NPMODADV = "NOT-PRE-NP-HEAD-OR-ADV"
SET NOT-NPMODADV-INDEF = WORD - PRE-NP-HEAD - Adv - Indef ; 
## NOT-NPMODADVI = "     ...-OR-INDEF"
SET NOT-NPMODADVII = WORD - PRE-NP-HEAD - Adv - Indef - Ill ; 
# Illative indir.obj.
SET NOT-NPMODADVIIP = WORD - PRE-NP-HEAD - Adv - Indef - Ill - Pcle ; 
# <== is this our NOT-NPMOD set?
SET NOT-NPMODCC = WORD - PRE-NP-HEAD - COMMA - @CNP ;
SET NAPP = WORD - PRE-APP ;



#!! * Miscellaneous sets
# ------------------
LIST Px = pxsg1 pxsg2 pxsg3 pxdu1 pxdu2 pxdu3 pxpl1 pxpl2 pxpl3 ;

LIST GASKAL = "gaskal" "gaskkal" "gaskii" "gaskka" "gaskkas" ;
 
 # p-positions that like coordination
 
LIST TIME-PP = "badjel" "čađa" "earret" "gaskkal" "guovddáš" "maŋŋel" "maŋŋil" "maŋŋá" "miehtá" "ovdal" ;
 

SET NUM = Num - OKTA ;

# this set does not contain ordinals, I am not sure if that is necessary.

SET NOT-NUM = WORD - Num ;

LIST MANGA = "máŋga" "galle" ;
 # Not referred to by any rule.

SET CARDINALS = Num - Ord - MANGA ;

SET NOT-CC = WORD - CC ;

SET NOT-PCLE = WORD - Pcle ;

LIST COMPAR = ("dávji" a comp) "eanet" "earalágan" "eará" "earret" "seammás" "seammalágan" "seamma_láhkái" ;
 
 # These combine with "go" Pcle, but COMPAR stands for 'comparison' rather than
 # 'comparative'.

LIST CONTRA = "muhto" ;
 # In lean muitalan, muhto dál muitalan.

LIST PROSEANTA = "proseanta" "%" ;

SET REAL-CLB = CLB - COMMA ;


SET NOT-INITIAL-CC = WORD - INITIAL - CC ;



#!! * Border sets and their complements
# ---------------------------------

SET CP = (pron interr) OR (pron rel) OR MO ;

LIST BOUNDARYSYMBOLS = "\;" ":" "-" "–" ;
	
SET S-BOUNDARY = CP OR BOUNDARYSYMBOLS OR ("muhto") OR ("de" adv) OR (neg sup) OR @CVP OR ("vel" adv qst) ;
	# does not include CS, because of "go" in questions, before it is disambugated.
	# includes CP
	# this one includes @CVP, the conjunction which actually connects two sentences (each with a finite verb) to each other, 
	# and not @CNP, which coordinates internal NP-/AdvP-/AP ... coordination
	# To be used only AFTER the disambiguation of @CVP and @CNP taking place in the chapter right before "Disambiguating pronouns"


SET BOC = S-BOUNDARY OR BOS ;
SET BOC-PUNCT = BOC - ("-") - ("–") ; 
SET EOC = S-BOUNDARY OR EOS ;

SET NP-BOUNDARY = BOS OR EOS OR REAL-CLB OR VFIN OR Inf OR (actio ess) OR ConNeg OR VGen OR Sup OR PPRON-NOT-GEN OR Recipr OR Po OR Pr OR Pcle OR ("jed") OR Interj OR CS OR CP OR @CVP ;

SET APP-BOUNDARY = REAL-CLB OR VFIN OR Inf OR (actio ess) OR ConNeg OR VGen OR Sup OR Recipr OR Po OR Pr OR Pcle OR Interj OR CS OR CP OR PrfPrc - @→N ;
# A special barrier used with mapping of appositions. 

# This set contains FMAINV with @, which means that it functions for all kind of mainverbs after the verb-mapping rules 
SET SV-BOUNDARY = S-BOUNDARY OR Inf - FAUXV OR Sup OR FMAINV ;
 # VFIN-NOT-AUX ;
 # should be MAIN-V linked to VFIN-aux to the left. (cg-3)
# This set is ment to use in rules for disambiguating due to verbs or verbsets. It contents @.

SET SVF-BOUNDARY = S-BOUNDARY OR VFIN ;

# This set is ment to use in rules for disambiguating due to verbs or verbsets. 
# Here we search for either an S-BOUNDARY or a finite verb, either aux or main.

LIST ADVLCASE = ill loc com ess ine ela ;
LIST CASE = nom acc gen ill loc com ess ine ela ;


#!! * Syntactic sets
# --------------

LIST ALLSYNTAG = (@+fauxv) (@+fmainv) (@-fauxv) (@-fmainv) (@-fsubj→) (@-fobj) (@-f←advl) (@-fadvl→) (@→a) (@→advl) (@advl←) (@←advl) (@advl→) (@advl) (@→n) (@app) (@app-n←) (@app-pron←) (@app→pron) (@app-num←) (@app-advl←) (@voc) (@cnp) (@cvp) (@p←) (@→p) (@hnoun) (@interj) (@pron←) (@obj) (@obj→) (@←obj) (@opred) (@←opred) (@opred→) (@spred←obj) (@pcle) (@comp-cs←) (@n←) (@spred) (@←spred) (@spred→) (@ppred) (@num←) (@subj) (@←subj) (@subj→) (@x) ;
 
LIST HEAD = @SUBJ→ @←SUBJ @SUBJ @OBJ @OBJ→ @←OBJ @ADVL @ADVL→ @←ADVL @SPRED→ @←SPRED @SPRED @OPRED→ @←OPRED @OPRED @-FSUBJ→ @-FOBJ→ @-FADVL→ @-FSPRED→ @-F←SUBJ @-F←OBJ @-F←ADVL @-F←SPRED ;
 

SET NON-APP = ALLSYNTAG - (@app) ;

#!! These were the set types.


         SECTION         #

#!! !!HABITIVE MAPPING

	# Habitives - HAB
	
#!! * __hab1__ 
MAP:hab1 (←hab→ @ADVL→) TARGET HAB-ACTOR + HAB-CASE - Attr (NEGATE 0 HAB-ACTOR-NOT-HUMAN LINK *1 HUMAN BARRIER (n nom)) (1 FAUXV + HAB-V-TAGS LINK *1 LEAT BARRIER NP-HEAD OR MAIN-V) ;
	#$ Mus eai leat girjjit mielde.
	#% Dorskis sáhttet leat vuoivvas ja meađđemat.

MAP:hab_numo (←hab→ @ADVL→) TARGET HAB-ACTOR + HAB-CASE - Attr (NEGATE 0 HAB-ACTOR-NOT-HUMAN LINK *1 HUMAN BARRIER (n nom)) (1 COPULAS + HAB-V-TAGS LINK 1 COMMA LINK *1 COMMA LINK 1 (n nom)) ;
	#%Dus lea, nu mo buot eará bargiin, vuoigatvuohta oahppasoahpamuša lassin maiddái čálalaš bargosoahpamuššii oahppafitnodagain.

#!! * __hab2__ 
MAP:hab2 (←hab→ @ADVL→) TARGET HAB-ACTOR + HAB-CASE - Attr (NEGATE 0 HAB-ACTOR-NOT-HUMAN LINK *1 HUMAN BARRIER (n nom)) (1 FAUXV + HAB-V-TAGS LINK 1 Adv LINK *1 LEAT BARRIER NOT-ADV-PCLE) ;

#!! * __hab3__ (<hab> @ADVL>) for hab-actor and hab-case; if leat to the right, and Nom to the right of leat. Lots of restrictions.
MAP:hab3 (←hab→ @ADVL→) TARGET HAB-ACTOR + HAB-CASE - Attr (NEGATE 0 Sem_Group OR Pl - Rel LINK *-1 Indef - BUOT + Nom OR HUMAN + Nom BARRIER NOT-NPMOD-ACC) (NEGATE 0 HAB-ACTOR-NOT-HUMAN LINK *1 HUMAN BARRIER (n nom)) (NEGATE 0 (sem_ani sem_group) LINK *1 Sem_Ani BARRIER (n nom)) (NEGATE 0 (sem_hum sem_group) LINK *1 Sem_Hum BARRIER (n nom)) (NEGATE 0 N OR Pers OR Indef LINK *-1 HAB-ACTOR + HAB-CASE BARRIER NOT-NPMOD-ACC OR CC) (NEGATE -1 Num LINK -1 Num) (*1 LEAT + HAB-V-TAGS BARRIER NOT-ADV-PCLE LINK *1 Nom BARRIER S-BOUNDARY) ;
	#$ Máhtes lea beana.
	#% Sis lei unnán dahje ii makkárge oktavuohta earáiguin earretgo internáhtas orodettiin, vaikko máŋggas sis ledje fulkkežagat.
	#% Juos gorreválggain Sámedikkis lea dárbbašlaš deavdit gáibádusa, ahte okta stivrralahtuin ja su sadjásašlahttu galgaba leat boazodoalu ovddasteaddjit, de galgá boazodoalu ovddasteddjiid loktet badjeliidda dan listtas, mii lea ožžon uhcimus jienaid daid listtaid gaskkas, mat galget ovddastuvvot ja main leat dakkár evttohasat. 
	#% Ealus leat eanaš álddut.


MAP:habInf (←hab→ @ADVL→) TARGET HAB-ACTOR + HAB-CASE OR ("dat" dem) + HAB-CASE - Attr (1 LEAT + Sg3 LINK 1 Inf) ;
	#$ Mis lea cahkkehit dola.

#!! * __habNomLeft__ 
MAP:habNomLeft (←hab→ @ADVL→) TARGET HAB-ACTOR + HAB-CASE - Attr ((-1 Nom LINK NEGATE *-1 (pers gen) BARRIER NOT-NPMOD) OR (-1 (sg gen) LINK -1 (sg num nom) LINK NEGATE *-1 (pers gen) BARRIER NOT-NPMOD)) (NEGATE -1 Num LINK -1 Num) (*1 LEAT + HAB-V-TAGS BARRIER NOT-ADV-PCLE) ;
	#$ Mii dus lea?

MAP:habAdvl (←hab→ @ADVL→) TARGET HAB-ACTOR + HAB-CASE - Attr (NEGATE 0 HAB-ACTOR-NOT-HUMAN LINK *1 HUMAN BARRIER (n nom)) (NEGATE 0 (sem_ani sem_group) LINK *1 Sem_Ani BARRIER (n nom)) (NEGATE 0 (sem_hum sem_group) LINK *1 Sem_Hum BARRIER (n nom)) ((*1 HAB-CASE BARRIER NOT-NPMOD-ACC LINK *1 LEAT + HAB-V-TAGS BARRIER NOT-ADV-PCLE) OR (*1 HAB-CASE BARRIER NOT-NPMODADV LINK *1 FAUXV LINK *1 LEAT + HAB-V-TAGS BARRIER NOT-ADV-PCLE)) ;
	#$ Ii han ovttasge du sogas leat dat namma.
	#Comment: "bealli" is probably not listed as HAB-ACTOR, even if it could mean "spouce".

#!! * __hab4__ 	
MAP:hab4 (←hab→ @ADVL→) TARGET HAB-ACTOR + HAB-CASE - Attr (NEGATE 0 HAB-ACTOR-NOT-HUMAN LINK *1 HUMAN BARRIER (n nom)) (1 CC LINK *1 HAB-ACTOR BARRIER NOT-NPMOD LINK *1 LEAT + HAB-V-TAGS BARRIER NOT-ADV-PCLE) ;



#!! * __hab6__ 
MAP:hab6 (←hab→ @←ADVL) TARGET HAB-ACTOR + HAB-CASE - Attr ((*-1 go BARRIER NOT-NPMOD LINK -1 LEAT + HAB-V-TAGS LINK -1 BOC) OR (*-1 LEAT + Qst BARRIER NOT-NPMOD LINK -1 BOC)) ;
	#$ Lea go dis ruhta?
	#$ Leago sámeálbmogis vuoigatvuođat vai eai?

#!! * __hab7__ 
MAP:hab7 (←hab→ @←ADVL) TARGET HAB-ACTOR + HAB-CASE - Attr (*-1 go BARRIER NOT-NPMOD LINK -1 LEAT + HAB-V-TAGS LINK -1 MAIN-V) ;
	#$ Dalle mun ferten iskat lea go dus feber.

#!! * __hab8__ This is not HAB
#MAP:hab8 (<hab> @ADVL>) TARGET HAB-ACTOR + Ill IF (*-1 BOS BARRIER NOT-NPMODADV)(*1 COPULAS BARRIER NOT-ADV-PCLE LINK *1 A OR N BARRIER NOT-ADV-PCLE);
	#$ Ellii šattai hoahppu.
#!! * __hab5__  This is not HAB
#MAP:hab5 (<hab> @ADVL>) TARGET HAB-ACTOR + HAB-CASE (NEGATE 0 HAB-ACTOR-NOT-HUMAN LINK *1 HUMAN BARRIER (N Nom))(*1 HAB-V BARRIER NOT-ADV-PCLE LINK *1 Nom BARRIER VFIN);
	#$ Mánás gollot gieđat. 

MAP:hab9 (←hab→ @ADVL→) TARGET HAB-CASE IF (-1 FIRSTNAME) (0 Ord) (NEGATE 0 HAB-ACTOR-NOT-HUMAN LINK *1 HUMAN BARRIER (n nom)) (*1 LEAT + HAB-V-TAGS BARRIER NOT-ADV-PCLE) ;
	#$ Heinrich njealjádis lea rikkis eamit.
	
MAP:hab10 (←hab→ @←ADVL) TARGET HAB-ACTOR + HAB-CASE (NEGATE 0 HAB-ACTOR-NOT-HUMAN OR Sem_Group LINK *1 HUMAN + Nom BARRIER S-BOUNDARY) (NEGATE 0 HAB-ACTOR-NOT-HUMAN LINK *1 Num BARRIER S-BOUNDARY LINK 1 HUMAN + Gen) (*-1 LEAT + HAB-V-TAGS BARRIER Nom OR S-BOUNDARY OR MAIN-V LINK -1 ADVLCASE OR Adv OR Po) ((*1 Nom BARRIER NOT-NPMOD-ACC) OR (1 CC LINK *1 HAB-CASE BARRIER NOT-NPMOD-ACC LINK *1 Nom BARRIER NOT-NPMOD-ACC)) ;
	#$ Dál leat sus 137 gáicca.
	#$ De lea sihke divššohasas ja su lagamus oapmahaččas vuoigatvuohta oažžut dieđuid.
	#$ Doppe leamaš sámiin stuora deaddu.

#!! * __habDain__ (<hab> @ADVL>) for (Pron Dem Pl Loc) if leat followed by Nom to the right
MAP:habDain (←hab→ @ADVL→) TARGET (pron dem pl loc) (*1 LEAT + HAB-V-TAGS BARRIER NOT-ADV-PCLE - FAUXV LINK 1 Nom) ;
MAP:habDain2 (←hab→ @ADVL→) TARGET (pron dem pl loc) (-1 Nom LINK -1 (pron interr)) (*1 LEAT + HAB-V-TAGS BARRIER NOT-ADV-PCLE - FAUXV LINK *1 Ess) ;
	#$ Hui dávjá lea nu ahte dain leat olbmot, geat eai doarvái bures dovdda sámi kultuvrra eaige sin jurddašanvuogi.
	#$ Makkár vuoigatvuođat dain leat Norgga riikavuložin?
	#% Dat bulle ja goldne go dain ii leat ruohtas. 
	#Comment: hard to determin whether 'dain' is HAB or ADVL.

	
# before relative clause
MAP:habRel (←hab→ @ADVL→) TARGET HAB-ACTOR + HAB-CASE (NEGATE 0 HAB-ACTOR-NOT-HUMAN LINK *1 HUMAN BARRIER (n nom)) (*1 Rel BARRIER WORD LINK *1 FMAINV BARRIER S-BOUNDARY LINK *1 LEAT + HAB-V-TAGS BARRIER S-BOUNDARY OR MAIN-V) ;
	#$ Divššohasas, gii dárbbaša guhkit áiggi ja oktiiheivehuvvon dearvvašvuođabálvalusaid, lea vuoigatvuohta oažžut ráhkaduvvot oktagaslaš plána.

MAP:habEllipse (←hab→ @←ADVL) TARGET HAB-ACTOR + HAB-CASE (1 Adv LINK 1 (n nom)) (-1 COMMA LINK -1 (n nom) LINK *-1 LEAT + HAB-V-TAGS BARRIER NOT-NPMOD LINK -1 HAB-ACTOR + HAB-CASE) ;
	#$ Buot gánddain lea dreassa, nieiddain fas gákti.

#!! * __habGen__ (<hab> @<ADVL) hab for Gen; if Gen is located in the end of the sentence and Nom is sentence initial
MAP:habGen (←hab→ @←ADVL) TARGET HAB-ACTOR + Gen (*-1 LEAT + HAB-V-TAGS BARRIER NOT-NPMODADV LINK -1 (n nom) OR (dem nom)) (1 EOC) ;
	#$ Dát lea áhči.
	
#!! * __habGenQst__ (<hab> @<ADVL) hab for Gen; in a question sentence. Gen is located sentence initially and SUBJ is found to the right. To the right of SUBJ is copulas
MAP:←habGenQst (←hab→ @←ADVL) TARGET (pron interr) + Gen (-1 BOS) (*1 Nom BARRIER NOT-NPMODADV LINK 1 LEAT + HAB-V-TAGS LINK NEGATE *1 FMAINV BARRIER SV-BOUNDARY) ;
	#$ Gean dat livččii? 
	#% Gean vuorru lea dál bálkestit birccu?

	#$ Riššat dat gal leat musge, jus eai leačča njuoskan.
	#$ Dán čieža oassálasti searvvis ii lean oktage boazodoalli, muhto kurssa oahpaheaddjis, Kjell Smestadas, lea doaivva ahte boazodolliide maid galgá gávdnot sierra heivehuvvon fálaldat.
	#$ Dás ii gávdno eará ágga go ahte njunuš olbmuin gielddas lea vuosteháhku sámegillii, go jo ákkat dán mearrádussii maid váilot, čujuha son das mii dáhpáhuvvá gieldda siste politihkalaččat.
	#$ Mu mielas goit galggaše sáhttit ovttasbargat, sis dat han leat ollu seamma beroštumit, galggaše goit sin áigumušaid ektui, luonddu gáhttet.
	#$ Ja son ii dahkan maidege dan jagi, muhto bođii fas nuppi jagi, ja de ledje sus guoimmit mielde, ja sii dahke darfegoađi vuohččan ja vuojehedje sámiid eret dasnai.
	#$ Sámediggi berošta erenoamážit das ahte ođđa boazodoalloláhka galgá sihkkarastit ja ovddidit boazodoalu vai mis maiddái boahtteáiggis sáhttá leat ceavzilis boazodoallu.
	#$ Dás lei buohkain vejolašvuohta vuoitit jus beare ledje doarvái áirruid oastán ja dan gal maiddái ollusat dahkege.
	#$ Juohke darfegoađášlágan goahti muohtaduoddaris ferte dohkket skuvlan; dás galget nuorat, čohkut dahje veallut duorggaid alde buolli árrandola ovddas vuostáiváldit oahpahusa olbmáin, geain alddiset lei unnán máhttu.
	#$ Buot gánddain lea dreassa, nieiddain fas gákti.
	#$ Doppe leamaš sámiin stuora deaddu.
	#$ Giellakantuvrras ii leat formála váldi álggahit gielladoaimmaid etáhtain, muhto veahkehit.
	#$ Duođalaš nana jáhku geažil lea divššohasas vuoigatvuohta biehttalit vuostáváldimis vara dahje varabuktagiid dahje biehttalit botkemis nealgudeami mii lea jođus.
	#$ Sin mearridanorgánain berre mearridanváldi leat nu viiddis go vejolaš ja nu čadni go vejolaš.
	#$ Sámedikkiin lea ráđđeaddi váldi buot sámi beroštumiide guoskevaš áššiin.
	#$ Sápmelaččat oasálaste maid dasa, muhto lassin ledje sis vel eará resursat.
	
	#% Olbmot jáhkke ahte stáhtainternáhtain lei buoret dássi, muhto dat guhkin eret duhtadedje dáláš gáibádusaid.
	#% Dan ulbmil das lea nannet oktavuođa ja mearridit vejolaš ovttasbargosurggiid mat leat ealáhusa oasálaččaide ávkin.
	#% Earát su luohkás ledje juo vissa njeallje siiddu su ovdalis matematihkka-girjjis.
	#% Mánáid-skuvllas gal lei mannan bures, muhto go álggii nuoraid-skuvlii, de ii gillen šat oba bargat ge rehkenastimiin.
	#% Dávjá muhtun sin fulkkiin lei várjaleaddji, doarjjan sidjiide.
	#% Das leat buorit lanjat čáppa guovllus.
	#% Das leat mielde olbmot geain lea sihke suoma ja sámi gullevašvuohta.
	#% Dat bulle ja goldne go dain ii lean ruohtas.
	#% Joavkkus leat guokte Riikaoasselávdegotti ovddasteaddji ja 2 Sámedikkis.
	#% Jus lea sáhka 12 jagi deavdán mánás, gii ii leat ovtta oaivilis mearrádusain, gozihanlávdegoddi galgá gieđahallat mearrádusa.
	#% Muhtin biirres leat gávcci 12 áirasis leamaš nissonolbmot, ja eará biirres leat buohkat geat leat válljejuvvon leamaš dievddut.
	#% Politihkas lei 1866 rájes sáhka ahte galggai go stivrregoahtit gii oažžu eatnama láigohit stáhtas.
	#% Searvegottiin lei dál ráfi miehtá Judea ja Galilea ja Samaria.
	#% Soabadanráđis galget leat golbma miellahtu ja seamma ollu várrelahtut.
	#% Sámedikkis lea leamaš čoahkkin 14.03.01.

LIST MEASR-N-SET = (n sem_measr) (n sem_money) (n sem_time) ;

SET MEASR-N = MEASR-N-SET - NOT-TIME ;


MAP:pcle (@PCLE) TARGET Pcle ;
MAP:interj (@INTERJ) TARGET Interj ;
MAP:→P (@→P) Gen (1 Po) ;
MAP:→Pcoor (@→P) Gen (1 CC LINK *1 @→P BARRIER NOT-NPMOD) ;
MAP:→P (@→P) Gen - TIME-N (NEGATE -1 Pr) (1 Pr LINK 1 Gen) ;
	#$ Sápmelaččat guđet orrot Norgga bealde Deanu, geavahit seammá gávtti go sápmelaččat Suoma bealde Deanu.

MAP:p← (@P←) Gen (*-1 Pr BARRIER NOT-NPMOD) (NEGATE 1 Gen) ;
MAP:p←coor (@P←) Gen (-1 CRD OR COMMA LINK -1 @P←) ;
	#$ Maŋŋegiđa ja árrageasi guohtu boazu lulábeali rámaid, čohkaid ja jekkiid.

LIST JAHKI = "jahke" "jahki" ;

MAP:num← (@Num←) TARGET (n sg gen) (*-1 NUM + (sg nom) OR NUM + (sg acc) BARRIER NOT-A LINK NOT -1 JAHKI) ;

#!! * __n<titel1__ (@N<) for ("jr") or ("sr"); if first one to the left is Prop
MAP:n←titel1 (@N←) TARGET ("jr") OR ("sr") (-1 Prop) ;
	#$ Loahpas jearai Johttisámelisttu Anders Somby jr. sudnos njuolga háliida go čearru gulahallat, juo dahje ii.

#!! * __n<titel2__ (@N<) for INITIAL; if first one to the left is a noun, or if to the left of you is a single letter which is part of a noun conjunction ''bustávas e ja f gáibiduvvo'' 
MAP:n←titel2 (@N←) TARGET INITIAL ((-1 N) OR (-1 CC LINK -1 INITIAL LINK -1 N)) (NEGATE 1 Prop OR Num OR INITIAL) ;
	#$ Mearrádusaide nugo namahuvvo nuppi lađđasis bustávas e ja f gáibiduvvo ovttamielalašvuohta.

#!! * __n<:com__ (@N<) for (Sg Com); if first one to the left is Coll
MAP:n←:com (@N←) TARGET (sg com) (-1 Coll) ;
	#$ Mun oidnen Ándde-guovtto Ristiinnáin.

MAP:n← (@N←) TARGET (num nom) ((-1 JAHKI OR ("diibmu")) OR (-1 Sem_Sur LINK 2 (":"))) ;
MAP:→nRCmpnd (@→N) TARGET RCmpnd ;

MAP:→num (@→Num) TARGET DUSSE (1 Num) ;
MAP:→n (@→N) TARGET DUSSE (1 N) ;
MAP:→a (@→A) TARGET DUSSE (1 A) ;

MAP:→nAttr (@→Num) TARGET Num - (sg nom) - (Sg Acc) (1 Num) ;
MAP:→nAttr (@→Num) TARGET Attr (1 Num) ;
MAP:→nAttr (@→A) TARGET Attr - Dem - Pron (*1 A - Gen OR Ord - Gen BARRIER NOT-NPMOD OR CC OR (n gen) OR COMMA OR PUNCT) ;

MAP:→nAttr (@→A) TARGET (indef attr) (*1 A - Gen OR Ord - Gen BARRIER NOT-NPMOD OR CC OR (n gen) OR COMMA OR PUNCT) ;
	#$ Dattetge ii leat muitaluvvon makkárge namahan veara geavahanriiddu birra dálolaččaid ja boazodoalu gaskkas.

#!! * __>nAttr__ (@>N) for Attr; if there is a noun to your right
MAP:→nAttr (@→N) TARGET Attr (*1 N BARRIER Num OR A - Attr OR Pr OR Ord) ;
	#$
	#% Ledjego hilbadat mánát?

#!! * __n>Indef__ (Pron Indef Attr); if eará is to the right
MAP:n→Indef (@→Pron) TARGET (pron indef attr) (*1 ("eará") BARRIER NP-BOUNDARY OR Num OR A - Attr OR Pr OR Ord) ;
	#$ Galgat go mii vuordit muhtun eará? 
	#% Dat berre leat oktasaš buot ovttaahkásaš mánáide Loabágis.
	#Comment: should be expanded

#!! * __>nNum__ (@>N) for numerals if; there is a noun to your right. You are not allowed to be (Sg Nom), (Sg Acc) or (Sem/Date)
MAP:→nNum (@→N) TARGET Num - (sg nom) - (Sg Acc) - Sem_Date (*1 N BARRIER NOT-A OR Num) ;
	#$ Juos mearriduvvo meahcceeatnamiid nuppástuvvan geavaheapmi golmma ja dušše golmma stivrralahtu doarjagiin ja olles uhcitlohku vuođđudallá oainnus sámi kultuvrra, boazodoalu, meahcásteami, ealáhusdoaimmaheami ja servodateallima destii mii lea árvvoštallojuvvon Sámedikki válddahusaid vuođul, de sáhttá uhcitlohku ovtta oli stivrračoahkkima áigge gáibidit ášši Sámedikki gieđahallamii.

MAP:→n (@→Num) TARGET Gen - JAHKI (1 Num) (NEGATE 0 OKTA + Nom LINK *1 (n pl loc) BARRIER NOT-NPMOD) (NEGATE 0 Gen LINK 1 CC LINK 1 Gen LINK 1 Po) ;
MAP:→n (@→Num) TARGET $$CASE (0 Dem OR OKTA OR ("buorre" a) LINK 1 $$CASE + Num) ;
MAP:→a (@→A) TARGET Gen - TIME-N (1 A) (NEGATE 0 OKTA + Nom LINK *1 (n pl loc) BARRIER NOT-NPMOD) (NEGATE 0 Gen LINK 1 CC LINK 1 Gen LINK 1 Po) ;
#!! * __noun>n__ (@>N) for Gen; if there is a noun to your right. Restrictions: Not if you are: a time related word. Not if you are OKTA with Pl Loc to your right. Not if CC is to your right followed by another Gen and then Po. Not if you are HUMAN and to your right is Actio Nom folloed by a noun.
MAP:→nNoun (@→N) TARGET Gen - TIME-N - Sem_Date (*1 N BARRIER NOT-NPMODADV OR A - Attr) (NEGATE 0 OKTA + Nom LINK *1 (n pl loc) BARRIER NOT-NPMOD) (NEGATE 0 Gen LINK 1 CC LINK 1 Gen LINK 1 Po) (NEGATE 0 HUMAN LINK 1 (actio nom) LINK 1 N) ;
	#$ Miehtá čájáhuslanja lea lebbejuvvon plastihkkagovččas ja gávcci máná njuni ovddas lea čáhcemála.
	#$ Gaskavahku eahkeda lei Kárášjoga kulturvisttis álbmotčoahkkin gosa ledje sullii 50 olbmo boahtán.
	#$ Dan dihte ohcat guokte lassi stipendiáhttavirggi sámi/eamiálbmotguoskevaš dutkamiidda.
	#$ Dalle sáhttá beaktilit háhkat guovtte ja maiddái golmmagielat (maiddái suomagielat) gelbbolašvuođa.
	#$ Juos mearriduvvo meahcceeatnamiid nuppástuvvan geavaheapmi golmma ja dušše golmma stivrralahtu doarjagiin ja olles uhcitlohku vuođđudallá oainnus sámi kultuvrra, boazodoalu, meahcásteami, ealáhusdoaimmaheami ja servodateallima destii mii lea árvvoštallojuvvon Sámedikki válddahusaid vuođul, de sáhttá uhcitlohku ovtta oli stivrračoahkkima áigge gáibidit ášši Sámedikki gieđahallamii.
	
#!! * __>nTime__ (@>N) for Gen TIME-N; if timenoun to your right. Restrictions: Not if you are a OKTA Nom with Pl Loc to your right. Not if CC followed by Gen, followed by Po to your right. Not if COMMA to your right
MAP:→nTime (@→N) TARGET TIME-N + Gen (*1 TIME-N BARRIER NOT-NPMOD OR A) (NEGATE 0 OKTA + Nom LINK *1 (n pl loc) BARRIER NOT-NPMOD) (NEGATE 0 Gen LINK 1 CC LINK *1 Gen BARRIER NOT-NPMOD LINK 1 Po OR NP-BOUNDARY) (NEGATE 0 Gen LINK 1 COMMA LINK NEGATE *1 CC LINK 1 Gen) ;
	#$ Mannan čuohtejagi gaskamuttus lei stuorra gilvu.
	#$ Dat sáhttet leat ovttasbargošiehtadusat oanahis áigái, dahje oktasašdoallu muhtin áiggiid jagis, dahje vaikko miehtá jagi. 
MAP:→n (@→A) TARGET TIME-N + Gen (1 Ord LINK 1 TIME-N) (NEGATE 0 OKTA + Nom LINK *1 (n pl loc) BARRIER NOT-NPMOD) (NEGATE 0 Gen LINK 1 CC LINK 1 Gen LINK 1 Po) ;
MAP:→n (@→N) TARGET $$CASE (0 Dem OR OKTA OR ("buorre" a) LINK *1 $$CASE + N BARRIER NOT-NPMOD) ;

#!! * __>ntittel__ (@>N) for (Sg Nom TIME-N) or (Nom Der/NomAg); if to your right is Sem/Mal, Sem/Fem, Sem/Sur
MAP:→ntittel (@→N) TARGET TIME-N + (sg nom) - Coll OR (sem_hum sg nom) - Coll OR Der_NomAg (1 Sem_Mal OR Sem_Fem OR Sem_Sur) ;
	#$ Ávvir ii ožžon rektor Mats Steinfjella jearahallamii.

#!! * __>nALU__ (@>N) for Sg Acc numerals; when a measure-noun to the right
MAP:→nALU (@→N) TARGET NUM + (sg acc) (*1 MEASR-N - (sem_time) BARRIER NOT-NPMODADV) ;
	#$ Min viessu lea vihtta mehtara alu. 
	#% Máŋggas čuovvoledje, fertejedje vázzit guokte jagi vuosttaš luohkás.
	#Comment: This works when all measure words get their Sem/Measure-tags.
	
MAP:→veara (@→A) TARGET Gen (1 ("veara" nom)) ;
MAP:→nAttrCoor (@→N) TARGET Attr (1 CC LINK 1 @→N) ;

LIST PREGEN = "álggogeahčen" "beallemuttus" "beallemuddu" ("bealli" n sg loc) "gaskamuddu" "gaskkamuddu" ("gaskavuohta" n sg loc) "loahpageahčen" ("miella" n sg loc) "oktavuohta" "ovttasbargu" ;

#!! * __>NTime__ (@>N) for Gen; if you are TIME-N with BOC to your left, and PREGEN to your right
MAP:→NTime (@→N) TARGET Gen IF (*-1 BOC BARRIER Pr) (NEGATE -1 Num) (0 TIME-N) (1 PREGEN) ;
	#$ Gursa bistá miessemánu beallemuddui.	

LIST MII = "mii" "mij" ;
LIST GII = "guhti" "gii" ;

MAP:pron← (@Pron←) (pl acc) (-1 MII + Pron OR GII + Pron) (*1 ("?")) ;
MAP:pron← (@Pron←) (pl acc) (-1 ("mihkkege" pron) OR ("miige" pron)) ;
MAP:pron← (@Pron←) (sg com) (0 HUMAN LINK -1 (pers du1) OR (pers du2) OR (pers du3)) ;
	#$ Moai Birehiin barggašeimme mánáidgárddis.
MAP:pron← (@Pron←) (sg com) (0 Prop LINK 0 Sem_Mal OR Sem_Sur OR Sem_Fem LINK *-1 (pers du1) OR (pers du2) OR (pers du3) BARRIER WORD - Prop) ;
	#$ Nystø mielas leaba soai Lene Hanseniin rievttes olbmot ovddastit sámi álbmoga dáhtu Tromssa ohcamušas.
MAP:pron← (@Pron←) TARGET (pl loc) (*-1 Indef - Attr BARRIER NOT-NPMOD) ;
MAP:pron← (@Pron←) TARGET (indef nom) OR (refl nom) (-1 COPULAS + FMAINV LINK -1 (pron nom)) (*1 Nom BARRIER NOT-A-ADV) ;
	#$ Soai leaba goappašagat nu jallat.
	
#!! * __n<:Refl__ (@N<) for (Refl Nom); if to the left is (N Nom), or if first one to the left is a finite mainverb with a (N Nom) to the left
MAP:n←:Refl (@N←) TARGET (refl nom) IF ((*-1 (n nom) BARRIER NOT-ADV-PCLE) OR (-1 FMAINV LINK *-1 (n nom) BARRIER SV-BOUNDARY OR Nom) OR (-1 FAUXV LINK *-1 (n nom) BARRIER SV-BOUNDARY OR Nom)) (NEGATE 1 Refl) ;
	#$ Eadni dal ieš čohkká ommangáttis ja boraha uhca nieiddažis gean son doallá askkistis.
	#$ Juohke bearaš fertii ieš omardit biepmuid, ja koahkkanieidda bargun lei vuoššat mállása. 


#!! * __>pron1__ (@>Pron) for GRADE-ADV, DUSSE, BUOT if; first one to the right is Pron
MAP:→pron1 (@→Pron) GRADE-ADV OR DUSSE OR BUOT (1 Pron) ;
	#$ Ja nugo olmmoš gohčodii guđege ealli, nu dat šattai navdojuvvot.
	
#!! * __>pron2__ (@>Pron) for (Refl Nom) if; first one to the right is Refl
MAP:→pron2 (@→Pron) (refl nom) (1 (refl) OR (pers)) ;
	#$ Sis lea nana árbevierru veahkehit ieš iežas persovnnalaš fierpmádagaid vehkiin.

#!! * __>pron3__ (@>Pron) for (Pron Recipr) if; first one to the right is (Pron Recipr)
MAP:→pron3 (@→Pron) (pron recipr) (1 (pron recipr)) ;
	#$ Mánát iešguđege sogas internáhtas deaivvadedje ja ovttasbargodilálašvuođaid bokte várra lahkanedje guhtet guimmiideaset.
	
#!! * __vaikko__ (@>Pron) for vaikko if; first one to the right is Indef
MAP:vaikko (@→Pron) ("vaikko") (1 Indef) ;
	#$ Dákkár stuora gávpogis olmmoš sáhttá bargat vaikko maid.

#!! * __vaikkoman__ (@>ADVL) for vaikko if; first one to the right is man
MAP:vaikkoman (@→ADVL) ("vaikko") (1 ("man" adv)) ;
	#$ Romssas, Davvi-Norgga stuorimus gávpogis, leat vaikko man ollu studeanttat.


MAP:→a (@→A) TARGET GRADE-ADV (*1 A BARRIER NOT-NPMOD) ;
MAP:→aSup (@→A) TARGET ("buot") (*1 Superl BARRIER NOT-NPMOD) ;
	#$ Mun ja mu ustibat manaimet kinoi geahččat buot ođđaseamos Harry Potter-filmma.
MAP:→adv (@→ADVL) TARGET GRADE-ADV OR Attr (1 Adv) ;
MAP:→adv (@→ADVL) TARGET Loc (1 ("eret" adv)) ;
MAP:→adv (@→N) TARGET GRADE-ADV (1 N) ;


MAP:pron← (@Pron←) TARGET $$CASE (0 Refl LINK *-1 $$CASE + Pers BARRIER S-BOUNDARY OR CC) ;
MAP:pron← (@N←) TARGET $$CASE (0 Refl LINK *-1 $$CASE + TIME-N BARRIER S-BOUNDARY OR CC) ;
	#$ Sis lea alddiset ruhta.

#!! * __BOSvoc__ (@VOC) for HUMAN Nom; if sentence initial. To the right is comma. No nom-cased HUMAN followed by comma or CC is allowed to the right. There should not be a relative clause to the right, because then you are likely to be SUBJ
MAP:BOSvoc (@VOC) TARGET HUMAN + Nom IF (-1 BOS OR REAL-CLB) (1 COMMA LINK NEGATE *1 HUMAN + Nom BARRIER NOT-NPMOD LINK 1 COMMA OR CC) (NEGATE 2 Rel) ;
	#$ Ustiban, in mun daga dutnje vearrut.


MAP:app←n (@APP-N←) TARGET (num nom) IF (-1 (prop sem_sur nom) LINK -1 ("\ (")) (1 COMMA LINK 1 ("s") LINK 1 CARDINALS LINK 1 ("\) ")) ;
	#$ (Simonsen 1959, s. 45)

	
MAP:r286 (@APP-N←) TARGET (n nom) IF (*-1 COMMA BARRIER APP-BOUNDARY OR CC LINK -1 (n nom)) (1 EOS) ;
MAP:r287 (@APP-N←) TARGET (n nom) IF (*-1 COMMA BARRIER APP-BOUNDARY OR CC LINK -1 (n nom)) (1 COMMA LINK 1 APP-BOUNDARY) ;
	## Gulan go Bienne Káre-Ánne, skuvlla bassi, bohtá. 
MAP:r288 (@APP-Pron←) TARGET (n nom) IF (*-1 COMMA BARRIER APP-BOUNDARY OR CC LINK -1 (pron nom)) (1 EOS) ;
MAP:r289 (@APP-Pron←) TARGET (n nom) IF (*-1 COMMA BARRIER APP-BOUNDARY OR CC LINK -1 (pron nom)) (1 COMMA LINK 1 S-BOUNDARY) ;
	#$ Mon lean Will Turner, Sáppatbátti Turnera bárdni!
MAP:app-pron← (@APP-Pron←) TARGET $$CASE - Gen (0 N LINK -1 $$CASE + Pers) (1 VFIN) ;
	#$ Ja moai boazodoalloáirasat áigguime vaikko guovttá joatkit barggu.
		
MAP:r290 (@APP-N←) TARGET (n acc) - TIME-N IF (*-1 (n acc) OR (a acc) BARRIER APP-BOUNDARY OR CC OR (n nom) LINK NOT *-1 COMMA BARRIER APP-BOUNDARY OR CC) (1 EOS) ;
	## Dovddatgo Bienne Káre-Ánne, skuvlla bassi? 	
	#$ Sámi áššiid stáhtačállin leat nammadan guovdageaidnulačča Anders J. Bals.
MAP:r291 (@APP-N←) TARGET (n acc) - TIME-N IF (*-1 (n acc) BARRIER APP-BOUNDARY OR CC OR (n nom) LINK NOT *-1 COMMA BARRIER APP-BOUNDARY OR CC) (1 COMMA LINK 1 S-BOUNDARY) ;	
 
MAP:nugoAppn← (@APP-N←) TARGET (n acc) IF (*-1 ("nugo") OR ("sihke") BARRIER APP-BOUNDARY LINK -1 COMMA LINK -1 (n acc) LINK *-1 BOS BARRIER NOT-NPMOD) (*1 COMMA BARRIER APP-BOUNDARY) ;
MAP:nugoAppn← (@APP-Pron←) TARGET (n acc) IF (*-1 ("nugo") OR ("sihke") BARRIER APP-BOUNDARY LINK -1 COMMA LINK -1 (pron acc) LINK *-1 BOS BARRIER NOT-NPMOD) (*1 COMMA BARRIER APP-BOUNDARY) ;
	#$ Muhtun sámi biktasiid, nugo gápmagiid ja vuoddagiid, sii geavahedje guhkit, gitta 1960-logu rádjai.

MAP:r292 (@APP-Pron←) TARGET (n acc) IF (*-1 COMMA BARRIER APP-BOUNDARY OR CC OR (n nom) LINK -1 (pron acc) LINK NOT *-1 COMMA BARRIER APP-BOUNDARY OR CC) (1 EOS) ;
MAP:r293 (@APP-Pron←) TARGET (n acc) IF (*-1 COMMA BARRIER APP-BOUNDARY OR CC OR (n nom) LINK -1 (pron acc) LINK NOT *-1 COMMA BARRIER APP-BOUNDARY OR CC) (1 COMMA LINK 1 S-BOUNDARY) ;	
	#$ Oidnet go Mihkkala, min nuoramus bártni?
	#$ Mon oainnán fierpmi, su mearkka, ja dieđán ahte Spider-Man lea leamaš das.	

		
MAP:r244 (@APP-ADVL←) TARGET N + LOC IF (*-1 COMMA BARRIER APP-BOUNDARY OR CC OR ADVLCASE LINK -1 DOPPE) (1 EOS) ;	
MAP:r245 (@APP-ADVL←) TARGET (n ill) IF (*-1 COMMA BARRIER APP-BOUNDARY OR CC LINK -1 DOHKO LINK *-1 BOS BARRIER APP-BOUNDARY) (1 COMMA) ;
MAP:r246 (@APP-Pron←) TARGET (n ill) IF (*-1 COMMA BARRIER APP-BOUNDARY OR CC LINK -1 DOHKO) (1 EOS) ;
MAP:r247 (@APP-Pron←) TARGET (n ill) IF (*-1 COMMA BARRIER APP-BOUNDARY OR CC LINK -1 DOHKO) (1 COMMA LINK 1 S-BOUNDARY OR CC) ;

MAP:r248 (@APP-ADVL←) TARGET (n gen) IF (*-1 COMMA BARRIER APP-BOUNDARY OR CC LINK -1 TIME-N OR TIME-ADV) (0 TIME-N + Gen) (1 EOS) ; 	
	#$ Mun vuolggán ihttin, bearjadaga.

MAP:appAdvlAcc (@APP-ADVL←) TARGET (num acc) IF (*-1 COMMA BARRIER APP-BOUNDARY OR CC LINK -1 TIME-N OR TIME-ADV) (1 TIME-N + Gen LINK 1 EOS) ; 	
	#$ Doppe son orui guhká, vihtta jagi.
	
MAP:r249 (@APP-ADVL←) TARGET Pr IF (*-1 COMMA BARRIER NOT-ADV LINK -1 TIME-ADV OR TIME-N) (*1 (n gen) OR (pers gen) BARRIER NOT-NPMOD LINK 1 EOS) ;	
MAP:r250 (@APP-ADVL←) TARGET Pr IF (*-1 COMMA BARRIER NOT-ADV LINK -1 TIME-ADV OR TIME-N LINK -1 BOS) (*1 (n gen) OR (pers gen) BARRIER APP-BOUNDARY OR CC LINK 1 COMMA) ;	
	#$ Dolin, ovdal soađi, olbmot lávejedje vuovdit joŋaid. 
	
MAP:r251 (@APP-ADVL←) TARGET (po) IF (-1 Gen LINK *-1 COMMA BARRIER NOT-ADV LINK -1 TIME-ADV OR TIME-N LINK -1 BOS) (1 COMMA) ;	
MAP:r252 (@APP-ADVL←) TARGET (po) IF (-1 Gen LINK *-1 COMMA BARRIER NOT-ADV LINK -1 TIME-ADV OR TIME-N) (1 EOS) ;	
	#$ Daid sii geavahedje guhkit, gitta 1960-logu rádjai.		

SET NOT-NP = VFIN-NOT-NEG OR ConNeg OR Inf OR Pcle OR Interj OR CS ;


	# Vocative - VOC 

#!! * __voc__ (@VOC) for Nom HUMAN; if comma to the left and an second person verb or pronoun to the left. To the right is the end of the sentence
MAP:voc (@VOC) TARGET Nom IF (*-1 COMMA BARRIER NOT-NP OR CC LINK *-1 (v sg2) OR (v du2) OR (v pl2) OR (pron sg2) OR (pron du2) OR (pron pl2) LINK NOT 0 LEAT) (1 EOS) (0 HUMAN) (NEGATE 0 Sg LINK *-1 V-SG3 BARRIER REAL-V) ;
	#$ Vuoi du, Betsaida!
	
MAP:voc (@VOC) TARGET Nom IF (-1 Attr LINK *-1 COMMA BARRIER NOT-NP OR CC LINK *-1 (v sg2) OR (v du2) OR (v pl2) OR (pron sg2) OR (pron du2) OR (pron pl2) LINK NOT 0 LEAT) (1 EOS) (0 HUMAN) (NEGATE 0 Sg LINK *-1 V-SG3 BARRIER REAL-V) ;
	
	
MAP:voc (@VOC) TARGET (n nom) IF (*-1 COMMA BARRIER NP-BOUNDARY LINK *-1 ("boahtin" nom) BARRIER REAL-V OR S-BOUNDARY LINK -1 ("bures")) (1 EOC) ;
	## Bures boahtin Čáhppes Bearralii, Miss Turner!	

MAP:voc (@VOC) TARGET Nom IF (-1 COMMA) (0 Pers) (0 Sg2 OR Du2 Or Pl2) (*1 Nom BARRIER NOT-NPMOD LINK 1 EOS) ;
	## Gáidet eret mu luhtte, dii verrošeaddjit! 

MAP:voc (@VOC) TARGET (n nom) IF (-2 BOS) (-1 (imprt sg2)) (NEGATE -1 Adv OR Qst) (1 EOS) ;
	## Gula eadni!

MAP:voc (@VOC) TARGET (n nom) IF (-3 BOS) (-2 (imprt sg2) OR (sg2 qst)) (NEGATE -2 Nom) (-1 COMMA) (1 COMMA) ;
	## Buvttes, Máhtte, goikemuoraid!

MAP:voc (@VOC) TARGET (n nom) IF (-4 BOS) (-3 (v sg2)) (-2 go) (-1 COMMA) (1 COMMA) ;
	## It go, bártnážan, boađáše fargga ruoktot?

MAP:voc (@VOC) TARGET (n nom) IF (*-1 BOS BARRIER NOT-ADV-PCLE) (0 HUMAN LINK 1 EOS) ;
	#$ Ustibažžan!




MAP:r294 (@APP-N←) TARGET (n loc) IF (*-1 COMMA BARRIER APP-BOUNDARY OR CC OR ADVLCASE LINK -1 (n loc)) (1 EOS) ;	
MAP:r295 (@APP-N←) TARGET (n loc) IF (*-1 COMMA BARRIER APP-BOUNDARY OR CC OR ADVLCASE LINK -1 (n loc)) (1 COMMA LINK 1 S-BOUNDARY OR Adv) ;	

MAP:r296 (@APP-Pron←) TARGET (n loc) IF (*-1 COMMA BARRIER APP-BOUNDARY OR CC OR ADVLCASE LINK -1 (pron loc)) (1 EOS) ;	
MAP:r297 (@APP-Pron←) TARGET (n loc) IF (*-1 COMMA BARRIER APP-BOUNDARY OR CC OR ADVLCASE LINK -1 (pron loc)) (1 COMMA LINK 1 S-BOUNDARY OR Adv) ;	
	#$ Ánde orru Oslos, Norgga oaivegávpogis.	

MAP:r298 (@APP-N←) TARGET (n ill) IF (*-1 COMMA BARRIER APP-BOUNDARY OR CC LINK -1 (n ill)) (1 EOS) ;
MAP:App-N←Punct (@APP-N←) TARGET (n ill) IF (*-1 ("–") BARRIER APP-BOUNDARY LINK -1 (n ill)) ;
	#$ Min jurdagat mannet lagamuččaide – bearrašii, sohkii ja ustibiidda.

MAP:r299 (@APP-N←) TARGET (n ill) IF (*-1 COMMA BARRIER APP-BOUNDARY OR CC LINK -1 (n ill)) (1 COMMA LINK 1 S-BOUNDARY) ;	
	
MAP:r300 (@APP-Pron←) TARGET (n ill) IF (*-1 COMMA BARRIER APP-BOUNDARY OR CC LINK -1 (pers ill)) (1 EOC OR COMMA) ;		
#MAP:r301 (@APP-Pron<) TARGET (N Ill) IF (*-1 COMMA BARRIER APP-BOUNDARY OR CC LINK -1 (Pers Ill))(1 COMMA LINK 1 S-BOUNDARY) ;			
	#$ Dan mun muitalan dušše dutnje, mu buoremus olbmái.

MAP:r302 (@APP-N←) TARGET (n ill) IF (*-1 COMMA BARRIER APP-BOUNDARY OR CC LINK -1 (n ill) LINK *-1 BOS BARRIER APP-BOUNDARY) (1 COMMA) ;	
MAP:r303 (@APP-Pron←) TARGET (n ill) IF (*-1 COMMA BARRIER APP-BOUNDARY OR CC LINK -1 (pron ill) LINK *-1 BOS BARRIER APP-BOUNDARY) (1 COMMA) ;	
	#$ Dutnje, mu buori ustibii, mun muitalan buot.
	
MAP:r304 (@APP-N←) TARGET (n com) IF (*-1 COMMA BARRIER APP-BOUNDARY OR CC LINK -1 (n com)) (1 EOS) ;	
MAP:r305 (@APP-N←) TARGET (n com) IF (*-1 COMMA BARRIER APP-BOUNDARY OR CC LINK -1 (n com)) (1 COMMA LINK 1 S-BOUNDARY OR Adv) ;	
	#$ Mun hupmen Máhte-Iŋggáin, Niillas-Máhte eamidiin.

MAP:r306 (@APP-Pron←) TARGET (n com) IF (*-1 COMMA BARRIER APP-BOUNDARY OR CC LINK -1 (pron com)) (1 EOS) ;				
MAP:r307 (@APP-Pron←) TARGET (n com) IF (*-1 COMMA BARRIER APP-BOUNDARY OR CC LINK -1 (pron com)) (1 COMMA LINK 1 S-BOUNDARY OR Adv) ;									

MAP:r308 (@APP-N←) TARGET (n nom) IF (*-1 COMMA BARRIER APP-BOUNDARY OR CC LINK -1 (n nom) LINK *-1 BOS BARRIER APP-BOUNDARY) (1 COMMA LINK 1 VFIN) ;
MAP:r309 (@APP-Pron←) TARGET (n nom) IF (*-1 COMMA BARRIER APP-BOUNDARY OR CC LINK -1 (pron nom) LINK *-1 BOS BARRIER APP-BOUNDARY) (1 COMMA LINK 1 VFIN) ;
	#$ Will Turner, Sáppatbátti Turnera bárdni, lea boahtán.
	
MAP:r310 (@APP-N←) TARGET (n loc) IF (*-1 COMMA BARRIER APP-BOUNDARY OR CC LINK -1 (n loc) LINK *-1 BOS BARRIER APP-BOUNDARY) (1 COMMA LINK 1 VFIN) ;		
MAP:r311 (@APP-Pron←) TARGET (n loc) IF (*-1 COMMA BARRIER APP-BOUNDARY OR CC LINK -1 (pron loc) LINK *-1 BOS BARRIER APP-BOUNDARY) (1 COMMA LINK 1 VFIN) ;		
	#$ Romssas, Davvi-Norgga stuorimus gávpogis, leat vaikko man ollu studeanttat.

MAP:r312 (@APP-N←) TARGET (n nom) IF (-1 (n gen) OR (pers gen) LINK *-1 CC BARRIER APP-BOUNDARY LINK -1 (n gen) OR (pers gen) LINK *-1 COMMA BARRIER APP-BOUNDARY OR CC LINK -1 (n nom)) (1 EOS) ;
MAP:r313 (@APP-N←) TARGET (n nom) IF (-1 (n gen) OR (pers gen) LINK *-1 CC BARRIER APP-BOUNDARY LINK -1 (n gen) OR (pers gen) LINK *-1 COMMA BARRIER APP-BOUNDARY OR CC LINK -1 (n nom)) (1 COMMA LINK 1 S-BOUNDARY) ;

MAP:r314 (@APP-Pron←) TARGET (n nom) IF (-1 (n gen) OR (pers gen) LINK *-1 CC BARRIER APP-BOUNDARY LINK -1 (n gen) OR (pers gen) LINK *-1 COMMA BARRIER APP-BOUNDARY OR CC LINK -1 (pron nom)) (1 EOS) ;
MAP:r315 (@APP-Pron←) TARGET (n nom) IF (-1 (n gen) OR (pers gen) LINK *-1 CC BARRIER APP-BOUNDARY LINK -1 (n gen) OR (pers gen) LINK *-1 COMMA BARRIER APP-BOUNDARY OR CC LINK -1 (pron nom)) (1 COMMA LINK 1 S-BOUNDARY) ;


MAP:r316 (@APP-N←) TARGET (n nom) IF (*-1 ("nugo") OR ("sihke") BARRIER APP-BOUNDARY LINK -1 COMMA LINK -1 (n nom)) (*1 EOS BARRIER APP-BOUNDARY) ;
MAP:r317 (@APP-Pron←) TARGET (n nom) IF (*-1 ("nugo") OR ("sihke") BARRIER APP-BOUNDARY LINK -1 COMMA LINK -1 (pron nom)) (*1 EOS BARRIER APP-BOUNDARY) ;	
	#$ Návetgoađis ledje ealut, nugo sávzzat, gáiccat ja gusat. 
	
MAP:r318 (@APP-N←) TARGET (n nom) IF (*-1 ("nugo") OR ("sihke") BARRIER APP-BOUNDARY LINK -1 COMMA LINK -1 (n nom) LINK *-1 BOS BARRIER APP-BOUNDARY) (*1 COMMA BARRIER APP-BOUNDARY LINK 1 VFIN) ;
MAP:r319 (@APP-Pron←) TARGET (n nom) IF (*-1 ("nugo") OR ("sihke") BARRIER APP-BOUNDARY LINK -1 COMMA LINK -1 (pron nom) LINK *-1 BOS BARRIER APP-BOUNDARY) (*1 COMMA BARRIER APP-BOUNDARY LINK 1 VFIN) ;
	#$ Mu vánhemat, sihke áhčči ja eadni, leaba jápmán. 
 
MAP:r320 (@APP-N←) TARGET (n acc) IF (*-1 ("nugo") OR ("sihke") BARRIER APP-BOUNDARY LINK -1 COMMA LINK -1 (n acc) LINK *-1 BOS BARRIER APP-BOUNDARY) (*1 COMMA BARRIER APP-BOUNDARY) ;
MAP:r321 (@APP-Pron←) TARGET (n acc) IF (*-1 ("nugo") OR ("sihke") BARRIER APP-BOUNDARY LINK -1 COMMA LINK -1 (pron acc) LINK *-1 BOS BARRIER APP-BOUNDARY) (*1 COMMA BARRIER APP-BOUNDARY) ;
	#$ Muhtun sámi biktasiid, nugo gápmagiid ja vuoddagiid, sii geavahedje guhkit, gitta 1960-logu rádjai.

#MAP (@SUBJ>) TARGET Nom (*-1 BOS BARRIER WORD)(1 (":")) ;
#MAP (@<SPRED) TARGET Nom (*-1 (":") BARRIER WORD)(*1 EOS BARRIER Nom) ;
	#$ Fáksa: 22242786


MAP:Relsubj→ (@SUBJ→) TARGET (rel nom) IF (*1 FMAINV) ;
	#$ Go dat geažit mat geaigut leaba bajás, gohčoduvvoba spahká-oaivin.

#!! * __Particle<subj __ (@PCLE)  
#MAP:Particle<subj (@PCLE) TARGET ("son") IF (-1 MO-MANge )(1 ANIMATE + Nom LINK 1 @+FMAINV OR @-FMAINV); 
	#$ Mo son Duommá lea dahkan? 
	#$ Dan viesu son mun dovddan? 
	#$ Lea go son Máret boahtán? 
	#$ Leago son Máret boahtán? 
	#[MO-MANge] son Máret boahtá? 
	#Comment: There is no such set as ANIMATE (yet).. 
 
	# Exsistential subjects - SUBJ
 
#!! * __spred<obj__ (@SPRED<OBJ) for Acc; the object of an SPRPED. Not to be mistaken with OPRED. If SPRED is to the left, and copulas is to the left of it. Nom or Hab are found sentence initially.
MAP:spred←obj (@SPRED←OBJ) TARGET Acc (*-1 Nom BARRIER NOT-NPMODADV LINK *-1 COPULAS + FMAINV BARRIER NOT-ADV-PCLE LINK *-1 Nom OR ←hab→ BARRIER WORD - Neg) (NEGATE *1 TRANS-V + FMAINV BARRIER SV-BOUNDARY OR COMMA) ;
	#$ Mánát leat oažžulat guliid.
	#$ Dain lea fáktemuš juohke balvva.
	#% Divššohasas lea vuoigatvuohta iežas journála geahččat

SET NOT-EXT = TIME-N OR A OR Pers OR Dem OR Rel OR ("dálki") OR OKTA ; 
LIST A-EXT = "riekta" "vejolaš" ;
 
#!! * __Hab<subj__ (<ext> @<SUBJ) for Nom; if copulas, goallut or jápmit is FMAINV and habitive or human Loc is found to the left. OR: if Ill or @Pron< followed by HAB are found to the left.
MAP:Hab←subj (←ext→ @←SUBJ) TARGET Nom - NOT-EXT OR A-EXT + Nom ((*-1 ("leat") + FMAINV + HAB-V-TAGS BARRIER NOT-NPMODADV LINK *-1 ←hab→ OR HUMAN + HAB-CASE BARRIER SV-BOUNDARY) OR (*-1 Ill OR @Pron← OR Po BARRIER NOT-NPMOD OR COMMA LINK *-1 ("leat") + FMAINV + HAB-V-TAGS BARRIER NOT-NPMODADV LINK *-1 ←hab→ BARRIER SV-BOUNDARY)) ;
	#$ Sus lea alddis buorit attáldagat.

#!! * __Hab>Advlcase<subj__ (<ext> @<SUBJ) for Nom; it allows adverbials with Ill/Loc/Com/Ess to be found inbetween HAB and <ext>.
MAP:Hab→Advlcase←subj (←ext→ @←SUBJ) TARGET Nom - NOT-EXT OR A-EXT + Nom (*-1 ADVLCASE BARRIER NOT-ADV-PCLE LINK -1 ("leat") + FMAINV + HAB-V-TAGS LINK *-1 ←hab→ BARRIER WORD - Neg) ;
	#$ Sus lea álgovuorus dušše guohtunvuoigatvuohta dáidda.
	#$ Boazosápmelaččain ii leat bassin vejolaš fievrridit gálvvu gerresiiguin.
 
#!! * __Nom>Advlcase<subj__ (<ext> @<SUBJ) for Nom; it allows adverbials with Ill/Loc/Com/Ess to be found inbetween Nom and <ext> @<SUBJ.
MAP:Nom→Advlcase←subj (←ext→ @←SUBJ) TARGET Nom - NOT-EXT (*-1 ADVLCASE - Ess BARRIER NOT-ADV-PCLE LINK -1 ("leat") + FMAINV + HAB-V-TAGS LINK *-1 Nom BARRIER WORD - Neg) ;
	#$ Oppalaš hábmema strategiija mii galgá váikkuhit dasa ahte servodat šaddá buohkaide olahahttin, ja dasa ahte vealaheapmi eastaduvvo, lea maid deattuhuvvon.
	#% Son lea oahpaheaddjin hui čeahppi.
 
#!! * __<extSubj__ (<ext> @<SUBJ) for Nom; if copulas to the left, and some kind of adverb, N Loc, time related word or Po to the left of it. OR: if Ill or @Pron< to the left, followed by copulas and the before mentioned to the left of copulas. 
MAP:←extSubj (←ext→ @←SUBJ) TARGET Nom - NOT-EXT ((*-1 ("leat") + FMAINV + HAB-V-TAGS BARRIER NOT-NPMODADV LINK *-1 DOPPE OR (n loc) OR (dem loc) OR Ill OR (sem_time adv) OR TIME-N + Gen OR TIME-ADVL OR Po OR Adv BARRIER SV-BOUNDARY OR Nom LINK NEGATE -1 Nom) OR (*-1 Ill OR @Pron← BARRIER NOT-NPMOD LINK *-1 ("leat") + FMAINV + HAB-V-TAGS BARRIER NOT-NPMODADV LINK *-1 DOPPE OR (sem_plc loc) OR Ill OR Sem_Time OR TIME-ADVL OR Po BARRIER SV-BOUNDARY)) (NEGATE *1 Nom OR Ess BARRIER NOT-NPMOD OR CC OR COMMA) ;
	#$ Dá lea dutnje biebmu.
	#$ Juohke guovllu gávttis lea sierralágan holbi.
	#% Buot buoremus lea ieš vuolgit. 

#!! * __<extSubjA__ (<ext> @<SUBJ) for A
MAP:←extSubjA (←ext→ @←SUBJ) TARGET A ((*-1 ("leat") + FMAINV + Sg3 BARRIER NOT-NPMODADV OR Pron LINK *-1 DOPPE OR (n loc) OR (dem loc) OR Ill OR (sem_time adv) OR TIME-N + Gen OR TIME-ADVL OR Po OR Adv OR ←hab→ BARRIER SV-BOUNDARY OR Nom LINK NOT *-1 Nom BARRIER NOT-NPMODADV) OR (*-1 Ill OR @Pron← BARRIER NOT-NPMOD LINK *-1 ("leat") + FMAINV + Sg3 BARRIER NOT-NPMODADV LINK *-1 DOPPE OR (sem_plc loc) OR Ill OR Sem_Time OR TIME-ADVL OR Po OR ←hab→ BARRIER SV-BOUNDARY OR Nom)) (NEGATE *1 Nom OR Ess BARRIER NOT-NPMOD OR CC OR COMMA) (NEGATE *1 ("ahte") OR go OR Inf BARRIER SV-BOUNDARY) ;
	#$
	
#!! * __<extSubj?__ (<ext> @<SUBJ) for Nom; if leat to the left and sentenceboundary 	
MAP:←extSubj? (←ext→ @←SUBJ) TARGET Nom - NOT-EXT (*-1 ("leat") + FMAINV + HAB-V-TAGS BARRIER NOT-NPMODADV OR Ord OR (ref gen) LINK *-1 BOC - Nom BARRIER WORD - Neg) (NEGATE *1 Nom - Rel OR Ess - Rel BARRIER NOT-NPMOD OR CC) (NEGATE *1 ("ahte") OR go + CS LINK *1 REAL-V) ;# (NEGATE *1 FMAINV BARRIER SV-BOUNDARY) ; 
	#% Ii leat gal dienas lottiid vuovdit.	
	#$ Ohppiidráđis lea stuora fápmu skuvllas dan dihte go leat nu máŋggas geat hupmet ovttas áššiid birra.
	#$ Rievtti mielde lea duodjeluohkás gulahallanoahpaheaddji, muhto son ii leat doppe nu dávjá go oahppit sávvet.
	#$ Ohppiidráđis lea stuora fápmu skuvllas dan dihte go leat nu máŋggas geat hupmet ovttas áššiid birra.
	#$ Miehtá čájáhuslanja lea lebbejuvvon plastihkkagovččas ja gávcci máná njuni ovddas lea čáhcemála.
	#$ Gaskavahku eahkeda lei Kárášjoga kulturvisttis álbmotčoahkkin gosa ledje sullii 50 olbmo boahtán.
	#$ Dán čieža oassálasti searvvis ii lean oktage boazodoalli, muhto kurssa oahpaheaddjis, Kjell Smestadas, lea doaivva ahte boazodolliide maid galgá gávdnot sierra heivehuvvon fálaldat.
	#$ Leago nieida? 

#!! * __<extSubj__ (<ext> @<SUBJ) for Nom, but not for Pers. To the left boahtit or heaŋgát as MAINV, and futher to the left is some kind of place related word, or time related word
#MAP:<extSubj (<ext> @<SUBJ) TARGET NOT-EXT (*-1 ("boahtit") + FMAINV - Du3 OR ("heaŋgát") BARRIER NOT-NPMODADV LINK *-1 DOPPE OR (N Loc) OR (Rel Loc) OR (Sem/Time Adv) OR TIME-N + Gen OR TIME-ADVL BARRIER SV-BOUNDARY)(NEGATE *1 Nom OR Ess BARRIER NOT-NPMOD) ;
	#$ Doppe boahtá áhčči.

#!! * __loc<extSubj__ (<ext> @<SUBJ) for Nom
MAP:loc←extSubj (←ext→ @←SUBJ) TARGET Nom - NOT-EXT OR A-EXT + Nom (-1 Loc LINK *-1 ("leat") + FMAINV + HAB-V-TAGS BARRIER NOT-NPMODADV OR S-BOUNDARY LINK NEGATE -1 Ess LINK NOT -1 Nom) ; 
	#$ Rievtti mielde lea duodjeluohkás gulahallanoahpaheaddji, muhto son ii leat doppe nu dávjá go oahppit sávvet.
	
#!! * __<spred__ (@<SPRED) for Nom; if Nom to the left, copulas to the left of Nom, and a time related word to the left of it.
MAP:Time←spred (@←SPRED) TARGET Nom - OKTA (*-1 (n nom) BARRIER NOT-NPMODADV OR COMMA LINK -1 COPULAS + FMAINV LINK -1 TIME-N OR TIME-ADVL OR Sem_Time) ;
	#$ Ovdal lei gákti árgabivttas ja bargobivttas, muhto dál dat lea čikŋabivttas.


#!! * __<extQst1__ (<ext> @<SUBJ) for Nom; in an existential sentence. To your left is hab, some kind of place or time-word or Po. This is a Qst-sentence so the qst-pcle is attached to leat or following leat
MAP:←extQst1 (←ext→ @←SUBJ) TARGET Nom - NOT-EXT ((*-1 ←hab→ OR DOPPE OR (sem_plc loc) OR (sem_time adv) OR TIME-N + Gen OR TIME-ADVL OR Po BARRIER NOT-NPMODADV LINK *-1 Qst BARRIER NOT-NPMOD LINK -1 ("leat") + HAB-V-TAGS) OR (*-1 ←hab→ OR DOPPE OR (sem_plc loc) OR (sem_time adv) OR TIME-N + Gen OR TIME-ADVL OR Po BARRIER NOT-NPMODADV LINK *-1 Qst + ("leat") + HAB-V-TAGS)) (NEGATE *1 HUMAN OR Loc OR Sem_Plc BARRIER NOT-NPMOD OR CC OR COMMA) (NEGATE *1 @+FMAINV OR @-FMAINV BARRIER SV-BOUNDARY) ;
	#$ Lea go dus ruhta?
	#$ Leažžá go Máhtes ođđa beana gal? 
	#$ Dalle mun ferten iskat lea go dus feber, ja mihtidit dus varradeattu.
	#% Lea go Sámedikki mielas Microsoft duođaid ánssášan vel oktii nuvttá máidnosa, mii ii leat duohta ge?

#!! * __<extQst2__ (<ext> @<SUBJ) for Nom; in an existential sentence. To your left is leat and it is sentence initial. No attributes or other words are allowed inbetween (because then you are SPRED), except the attribute muhtun, muhtin
MAP:←extQst2 (←ext→ @←SUBJ) TARGET Nom - NOT-EXT (*-1 ("leat") + HAB-V-TAGS BARRIER WORD - (Attr "muhtun") - (Attr "muhtin") LINK -1 BOS) (NEGATE *1 HUMAN OR Loc OR Sem_Plc BARRIER NOT-NPMOD OR CC OR COMMA) (NEGATE 1 (a nom)) ;
	#$ Ledje muhtin čiegusvuođat, nu ahte in dieđe juste mo sii dahke, muhto geavahedje goit gunaid spárttuid vuostá ja bihka eksema vuostá.
	
#!! * __extQst3>__ (<ext> @SUBJ>) for Nom; if habitive first one to the left, followed by copulas.
MAP:extQst3→ (←ext→ @SUBJ→) TARGET Nom IF (1 ←hab→ LINK 1 COPULAS) (NEGATE 1 (pron rel)) (NEGATE 1 ←hab→ LINK 1 COPULAS LINK 1 FMAINV) ;
	#$ Mii dus lea?
	#$ Man uhccán osku dus lea!
	#$ Sii muitalit oahpaheaddjái makkár barggut sis leat siiddas.
	#% Sis lei unnán dahje ii makkárge oktavuohta earáiguin earretgo internáhtas orodettiin, vaikko máŋggas sis ledje fulkkežagat.

#!! * __<extsubjcoor__ (<ext> @<SUBJ) for Nom. Coordination
MAP:←extsubjcoor (←ext→ @←SUBJ) TARGET Nom - NOT-EXT - Pron (*-1 (cc @CNP) OR Neg OR COMMA BARRIER NOT-NPMOD LINK *-1 ←ext→ BARRIER WORD) (NEGATE 1 REAL-V) ;
	#$ Eai lean boraspiret, eai ealggat, eaige nu ollu bohccot dain duovdagiin go dál.


	# Subject predicatives - SPRED 
	
	
#!! * __<spredQst__ (@<SPRED) for Nom; in a typically question sentence; You are not allowed to be Pers or human. The special part is that Nom is not allowed to your right
MAP:←spredQst (@←SPRED) TARGET Nom - Pers IF ((*-1 Qst BARRIER NOT-NPMODADV LINK -1 COPULAS + FMAINV LINK -1 BOS) OR (*-1 (qst "leat") + FMAINV BARRIER NOT-NPMODADV LINK -1 BOS)) (NEGATE 0 HUMAN) (NEGATE *1 Nom BARRIER NOT-NPMOD) ;
	#$ Lea go duohtavuohta sukcasiin Jack Sparrow birra?
	#$ Leat go árgi bajándálkkis? 

#!! * __<spredQst2__ (@<SPRED) for (A Nom); in a typically question sentence; You are SPRED if (N Nom) is to your left and leat + qst is to the left 
MAP:←spredQst2 (@←SPRED) TARGET Nom IF ((*-1 (n nom) BARRIER NOT-NPMODADV LINK *-1 Qst BARRIER NOT-NPMODADV LINK -1 COPULAS + FMAINV LINK -1 BOS) OR (*-1 (n nom) BARRIER NOT-NPMODADV LINK *-1 (qst "leat") + FMAINV BARRIER NOT-NPMODADV)) ;
	#$ Leat go min dihtorat ođđaáigásaččat?
	#$ Lea go Čáhppes Bearral oahpis dutnje?
	#$ Leat go álbmotmeahcit veahkaváldi báikkálaš olbmuid vuostá?
	#$ Lea go dihtor dušše ođđaáigásaš čállinmášiidna?  dát ii leat HUMAN, dárbbaša sierra njuolggadusa 
	
#!! * __<spredQst3__ (@<SPRED) for (A Nom); you are SPRED when you are (A Nom) and to your right is (N Nom). This is a Qst-sentence, so copulas is found to your left
MAP:←spredQst3 (@←SPRED) TARGET (a nom) IF (*-1 Qst BARRIER NOT-NPMOD LINK -1 COPULAS + FMAINV LINK -1 BOS) (*1 (n nom) BARRIER NOT-NPMOD) ;
	#$ Ledje go hilbadat mánát?
	#$ Ledjego hilbadat mánát? #Comment: should work
	
#!! * __<spredQst4__ (@<SPRED) for Nom; but only in a qst-sentence where there is no chance of you beeing the subj
MAP:←spredQst4 (@←SPRED) TARGET Nom IF ((*-1 Qst BARRIER NOT-NPMOD LINK -1 COPULAS + FMAINV LINK -1 BOS) OR (*-1 COPULAS + Qst BARRIER NOT-NPMOD LINK -1 BOS)) (NEGATE *1 Nom BARRIER NOT-NPMODADV OR @CNP) (NEGATE *1 (sem_plc loc) OR (sem_org loc) OR (sem_build loc) OR TIME-N + Gen OR TIME-ADVL) (NEGATE *1 FMAINV BARRIER EOS) ; 
	#$ Lea go nieida vai bárdni? 
	#% Leatgo sii njuovadan juo? 

#!! * __<NomBeforeSpred__ (@<SPRED) for (A Nom) if; Nom to the left, and copulas is to the left of Nom. There is no Nom allowed to the right of copulas! To avoid messing with coordination: ja, dahje and comma are not allowed to your left. Comma is not allowed to your right; if so then you are likely to be coordinated
MAP:←NomBeforeSpred (@←SPRED) TARGET (a nom) IF (*-1 Nom BARRIER NOT-NPMODADV LINK *-1 COPULAS + FMAINV BARRIER NOT-NPMODADV OR S-BOUNDARY LINK NEGATE -1 Nom) (NEGATE *-1 ("ja") OR ("dahje") BARRIER NOT-NPMODADV) (NEGATE -1 COMMA) (NEGATE 1 ("go") OR V) ;
	#$ Earát fas orro olbmuid luhtte, ja sin mielas lei dát hui givssálaš.
	#$ Dábálaččat lea čuollu guhkit, golbma, njeallje fierbmebaji guhku.
	#$ Suomas maid lea dilli váttis.
	#$ Dán oktavuođas leat dološ geavahusa njuolggadusat miellagiddevaččat.
	#$ Márehis lea oaivi bávččas.
  
#!! * __<spred__ (@<SPRED) for A Nom or N Nom if; the subject Nom is on the same side of copulas as you: on the right side of copulas
MAP:←spred (@←SPRED) TARGET (a nom) OR (n nom) IF (*-1 (n nom) BARRIER NOT-A LINK -1 COPULAS + FMAINV) (NEGATE -1 @←SPRED) ;
	#$ Girjji namma čujuha dasa ahte dološ myhtain leat sámit mánát.

#!! * __<spredVeara__ (@<SPRED) for veara + Nom; if genitive immediately to the right, and intransitive mainverb to the right of genitive
MAP:←spredVeara (@←SPRED) TARGET ("veara" nom) IF (-1 Gen LINK *-1 IV + FMAINV BARRIER SV-BOUNDARY) ; 
	#$ Son oinnii buot dan mii lea ráhkistan ja gudnejahttin veara.

#!! * __leftCop<spred__ (@<SPRED) for Nom; if copulas is the main verb to the left, and there is no Ess found to the left of cop (note that Loc is allowed between target and cop). OR: if you are Coll or Sem/Group with copulas to your left. 
MAP:leftCop←spred (@←SPRED) TARGET Nom - Pers IF ((*-1 COPULAS + FMAINV BARRIER NOT-NPMODADV OR S-BOUNDARY LINK NEGATE -1 Ess LINK NOT -1 Nom) OR 
(0 Coll OR Sem_Group LINK *-1 COPULAS + FMAINV BARRIER NOT-NPMODADV)) 
(NEGATE 1 Nom - Rel) (NEGATE *1 Nom - Rel BARRIER NOT-A OR COMMA) (NEGATE 0 Gen OR Attr OR ("buorre") LINK 1 N) (NEGATE 1 Ess LINK NOT *-2 SUBJ BARRIER S-BOUNDARY) (NEGATE 0 HUMAN LINK *-1 ("orrut") BARRIER NOT-NPMODADV OR S-BOUNDARY) (NEGATE 0 Num LINK 1 HUMAN LINK *-1 ("orrut") BARRIER NOT-NPMODADV OR S-BOUNDARY) (NEGATE 0 Nom LINK *1 (a nom) BARRIER NOT-ADV) ;
	#$ Čállit lea buoret go lohkat.
	#$ Soai leat goappašagat nu jallat.
	#% Mánnáguoddi-spagáin leat spahká-oaivvit sakka guhkibut.

#!! * __<spredLocEXPERIMENT__ (@<SPRED) for material Loc; if you are to the right of copulas, and the Nom to the left of copulas is not a hab-actor
MAP:←spredLocEXPERIMENT (@←SPRED) TARGET (sem_mat n loc) IF (*-1 COPULAS + FMAINV BARRIER NOT-ADV-PCLE LINK *-1 Nom BARRIER VFIN-NOT-NEG LINK NEGATE 0 HAB-ACTOR) ;
	#$ Niibi lea stális.
	#% Niibi lea olbmos.
	#% Olmmoš lea muoras.
	# Comment: if we can use the Sem-tags like this, then it would be great! :-) 
 
 
#!! * __NumTime__ (@<SPRED) for A Nom
MAP:NumTime←spred (@←SPRED) TARGET (a nom) IF (-1 TIME-N LINK -1 Num LINK *-1 COPULAS + FMAINV BARRIER NOT-ADV-PCLE) (NEGATE 1 Nom - Rel) ;
	#$ Son lea 10 jagi boaris.
	#$ Sápmelaččaid historjá álbmogin lea duháhiid jagiid boaris.

#!! * __<spredSg__ (@<SPRED) for Sg Nom	
MAP:←spredSg (@←SPRED) TARGET (sg nom) IF (*-1 @CNP OR (neg foc_ge) BARRIER REAL-V - COPULAS OR S-BOUNDARY LINK *-1 @←SPRED BARRIER WORD) ;
	#$ Son lea mu oabbá, ja 10 jagi boaris.
	#$ Son oinnii buot dan mii lea ráhkistan ja gudnejahttin veara.
	#$ Munnje lei dehálaš ahte áiggošin leat bahánihkkán.
	#$ Mus ii leat biila iige mopeda.

#!! * __<spredPg__ (@<SPRED) for Pl Nom	
MAP:←spredPl (@←SPRED) TARGET (pl nom) IF ((*-1 COPULAS BARRIER NOT-NPMODADV LINK *-1 (pl nom) OR PLPRON + Nom OR DUPRON + Nom BARRIER NOT-ADV-PCLE) OR (*-1 COPULAS BARRIER NOT-NPMODADV LINK -1 Nom LINK *-1 CC BARRIER NOT-NPMOD LINK -1 Nom) OR (*-1 COPULAS BARRIER NOT-NPMODADV LINK *-1 FAUXV BARRIER NOT-ADV-PCLE LINK *-1 (pl nom) OR PLPRON + Nom OR DUPRON + Nom BARRIER NOT-ADV-PCLE)) ;
	#$ Arkiivaávdnasat leat 25-30 jagi boarrásat.

#!! * __<spred__ (@<SPRED) for Nom; if copulas to the left, and Nom or sentence boundary to the left of copulas. First one to the right is EOS.
MAP:←spred (@←SPRED) TARGET Nom IF (*-1 COPULAS + FMAINV BARRIER NOT-NPMODADV LINK -1 Nom OR S-BOUNDARY) (1 EOS) ;
	#$ Arkiivaávdnasat galget sáddejuvvot go leat sullii 25-30 jagi boarrásat.

#!! * __COP<spredEss__ (@<SPRED) for N Ess
MAP:←spredEss (@←SPRED) TARGET (n ess) IF (*-1 COPULAS BARRIER S-BOUNDARY OR Ess - ("buorre" ess) OR Nom LINK 0 FMAINV LINK *-1 NP-HEAD-NOM BARRIER SV-BOUNDARY OR ←hab→) ;

#!! * __spredEss>__ (@SPRED>) for N Ess; if copulas to the right of you, and if an NP with nom-case first one to your left.
MAP:spredEss→COP (@SPRED→) TARGET (n ess) IF (*1 COPULAS BARRIER SV-BOUNDARY) (-1 NP-HEAD-NOM) ;
	#$ Sápmelaččaid historjá álbmogin lea duháhiid jagiid boaris, muhto dálá ássanguovlluin sápmelaččat eai leat ássan nu guhká.

#!! * __GalleSpred>__ (@SPRED>) for Num Nom; if sentence initial
MAP:Gallespred→ (@SPRED→) TARGET ("galle" num nom) IF (*-1 BOS BARRIER NOT-ADV) ;

#!! * __spredSgMII>__ (@SPRED>)
MAP:spredSgMII→ (@SPRED→) TARGET MII + (sg nom) IF (*1 (sg nom) BARRIER NOT-NPMOD LINK 1 COPULAS) ;

#!! * __r492>__ (@SPRED>) for Interr Gen; consisting only of negations. You are not allowed to be MII. You are not allowed to have an adjective or noun to yor right. You are not allowed to have a verb to your right; the exception beeing an aux.
MAP:r492 (@SPRED→) TARGET (interr gen) IF (NEGATE 0 MII) (NEGATE *1 A OR N BARRIER NOT-NPMOD) (NEGATE *1 V - FAUXV BARRIER S-BOUNDARY) ;
	#Commet: Not in use?


MAP:spredSg→ (@SPRED→) TARGET (sg nom) IF (1 (sg nom) OR SGPRON + Nom OR (indef nom) LINK 1 COPULAS) ;
	#$ Mii mun lean?

#!! * __AdjSpredSg>__ (@SPRED>) for A Sg Nom; if copulas to the right, but not if A or @<SPRED are found to the right of copulas
MAP:AdjSpredSg→ (@SPRED→) TARGET (a sg nom) IF (*1 COPULAS + FMAINV BARRIER SV-BOUNDARY OR COMMA OR CC LINK NOT *1 A OR @←SPRED BARRIER NOT-NPMOD) ; ;
	#$ Buorre lea oažžut su boahtit deike.
	#$ Divrras ii leat gal barggu ektui.
	#% Dási ferte árvvoštallat daláš gáibádusaid ektui, ja internáhtat ledje buorebut go priváhta olbmuid luhtte orrut.
	
MAP:spredPl→ (@SPRED→) TARGET (pl nom) IF (1 (pl nom) OR PLPRON + Nom OR DUPRON + Nom LINK 1 COPULAS) ;

MAP:←spredCoor (@←SPRED) TARGET Nom - Rel IF (*-1 CC OR COMMA BARRIER NOT-NPMOD LINK -1 @←SPRED) (NEGATE 1 VFIN) ;

#!! * __Spred>SubjInf__ (@SPRED>) for Nom; if copulas to the right, and the subject of copulas is an Inf to the right
MAP:spred→SubjInf (@SPRED→) TARGET Nom - OKTA IF (*1 COPULAS + FMAINV BARRIER SV-BOUNDARY OR COMMA) (*2 @←SUBJ + Inf BARRIER NOT-ADV-PCLE) ;
	#$ Gurssa ulbmil lea oahppat goarrut Ivgu gávtti.
	#$ Bargu lei kánske árvvoštallat dan.	
	 
#!! * __spredCoord__ (@<SPRED) coordination for Nom; only if there already is a SPRED to the left of CNP. Not if there is some kind of comparison involved.
MAP:spredCoord (@←SPRED) TARGET Nom - OKTA IF (*-1 @CNP BARRIER NOT-NPMODADV) (*-2 @←SPRED BARRIER WORD - Adv) (NEGATE *-1 ("go" cs) BARRIER NOT-NPMOD LINK -1 ("nu" adv)) (NEGATE *-1 XGO BARRIER NOT-NPMOD) ;# (*1 EOS) (NEGATE *1 FMAINV) ;
	#$ De eai leat šat dušše tálat, muhto bustávat maid.
	#% Dat ledje beakkán ja dovddus olbmot nu go Diaz.
 
 
	# Subjects - SUBJ
	
 
LIST PERS-TAGS = sg1 sg2 sg3 du1 du2 du3 pl1 pl2 pl3 ;

MAP:subj→Pers (@SUBJ→) TARGET $$PERS-TAGS + Nom IF ((*1 $$PERS-TAGS + VFIN BARRIER SV-BOUNDARY OR N - ADVLCASE) OR (1 (sg com) LINK *1 $$PERS-TAGS + VFIN BARRIER SV-BOUNDARY OR N - ADVLCASE) OR (*1 Refl BARRIER NOT-ADV-PCLE LINK *1 $$PERS-TAGS + VFIN BARRIER NOT-ADV-PCLE)) ;
	#$ Moai Birehiin barggašeimme mánáidgárddis.
MAP:subj→Pers (@SUBJ→) TARGET (sg1 nom) (-1 CC LINK *2 (v pl1) BARRIER NOT-ADV-PCLE) ;
MAP:subj→Pers (@SUBJ→) TARGET (sg1 nom) (1 CC LINK *1 (n pl) BARRIER NOT-NPMOD LINK *1 (v pl1) BARRIER NOT-ADV-PCLE) ;
#MAP:subj>Pers (@SUBJ>) TARGET (Sg1 Nom) (-1 CC LINK *2 (V Pl1) BARRIER NOT-ADV-PCLE) ;
	#$ Mii du namma lea?
	#$ Gii ..
	#% Lea go son Máret boahtán? 
	
MAP:←subjPers (@←SUBJ) TARGET $$PERS-TAGS + Nom IF (*-1 $$PERS-TAGS + VFIN BARRIER NOT-ADV-PCLE) ;
	
#!! * __subj>Sgnr1__ (@SUBJ>) for Nom Sg, including Indef Nom if; VFIN + Sg3 or Pl3 to the right (VFIN not allowed to the left) 
MAP:subj→Sgnr1 (@SUBJ→) TARGET (nom sg) OR (sg3 nom) OR (indef nom) IF (*1 VFIN + Sg3 OR VFIN + Pl3 BARRIER REAL-V OR S-BOUNDARY) (NEGATE *-1 VFIN + Sg3 BARRIER NOT-ADV-PCLE) ;
	#$ Niibi lea stális.
	#$ Girji lea Máreha.

#!! * __subj>Du__ (@SUBJ>) for dual nominatives, including Coll Nom. VFIN + Du3 to the right. 
MAP:subj→Du (@SUBJ→) TARGET (coll nom) IF (*1 VFIN + Du3 BARRIER REAL-V OR S-BOUNDARY) ;
#!! * __subj>Pl__ (@SUBJ>) for plural nominatives, including Coll and Sem/Group. VFIN + Pl3 to the right.

#!! * __subj>Pl__ (@SUBJ>) for plural nominatives
MAP:subj→Pl (@SUBJ→) TARGET (nom pl) OR (pl3 nom) OR (sem_group nom) OR (coll nom) IF (*1 VFIN + Pl3 BARRIER REAL-V OR S-BOUNDARY) ;
	#$
 

#!! * __subj>Sg__ (@SUBJ>) for Nom Sg; if VFIN + Sg3 to the right.
MAP:subj→Sg (@SUBJ→) TARGET (nom sg) IF (*1 VFIN + Sg3 BARRIER REAL-V OR S-BOUNDARY OR COMMA) ;
	#$ Nuba áddjá árvala ahte eiseválddit galggaše bálkáhit baicce vuorrolohkkiid, vai rehkenasto vuorruid mearri maiddái, iige dušše dat mearri guliin mii goddo deanus.

#!! * __Sg<subj__ (@<SUBJ) for Nom Sg; if VFIN Sg3 or Du2 to the left (no HAB allowed to the left).
MAP:Sg←subj (@←SUBJ) TARGET (nom sg) IF (*-1 VFIN + Sg3 OR VFIN + Du3 BARRIER S-BOUNDARY) (NEGATE *-1 ←hab→ BARRIER BOC) ;
	#$ Vuovssá goddá boanda.
	#$ Sin mielas lei dát hui givssálaš. 
	#% Oppalaš hábmema strategiija mii galgá váikkuhit dasa ahte servodat šaddá buohkaide olahahttin, ja dasa ahte vealaheapmi eastaduvvo, lea maid deattuhuvvon.

#!! * __Du<subj__ (@<SUBJ) for Nom Coll if; a dual third person verb is found to the left	
MAP:Du←subj (@←SUBJ) TARGET (nom coll) IF (*-1 VFIN + Du3 BARRIER REAL-V OR S-BOUNDARY) ;
	#$
	
#!! * __PlDu<subj__ (@<SUBJ) for (N Nom Pl), (Sem/Group Nom), (Coll Nom), (Pron Nom Pl) if; a verb is Pl3 or Du3 to your left. The verb is not allowed to be copulas with a place, Loc or time noun to its left
MAP:PlDu←subj (@←SUBJ) TARGET (n nom pl) OR (sem_group nom) OR (coll nom) OR (pron nom pl) OR (pron indef) IF (*-1 VFIN + Pl3 OR VFIN + Du3 BARRIER REAL-V OR S-BOUNDARY OR Loc LINK NEGATE 0 COPULAS + FMAINV LINK -1 Sem_Plc OR Loc OR TIME-N OR TIME-ADVL) (*-1 VFIN + Pl3 OR VFIN + Du3 BARRIER REAL-V OR S-BOUNDARY OR Loc LINK NEGATE -1 Nom) (NEGATE 0 (pron indef ill) OR (pron indef attr) OR ("buot")) ;
	#$ Dárkkisteami maŋŋil gárte dan guovtti riikka boazodoallolágat measta áibbas ovttaláganat viidodaga ja sisdoalu dáfus.
	#$ Dat gal lea maid okta fáktor muhtin guvlui, muhto gávdnojit maid eará.
	#$ Ja go álget johttágoahtit, de eai oaččo ealuid čoahkkái, ja go ožžot, de lea nu arvi ja muohtti, ahte leat visot nu njuoskasat.

#!! * __copPl3<subj__ (@<SUBJ) for Nom Pl; you don't to be a noun, only Nom Pl. To the left is copulas and first one to the right is @<SPRED
MAP:copPl3←subj (@←SUBJ) TARGET (nom pl) IF (*-1 COPULAS + Pl3 BARRIER NOT-NPMOD) (*1 @←SPRED BARRIER NOT-ADV) ;
	#$ Girjji namma čujuha dasa ahte dološ myhtain leat sámit mánát.


MAP:subj→Coor1 (@SUBJ→) TARGET Nom IF (1 CC LINK *1 Nom BARRIER NOT-NPMOD LINK *1 VFIN + Pl3 OR VFIN + Du3 BARRIER NOT-ADV-PCLE) ;

MAP:subjCoorTEST (@SUBJ→) TARGET Nom IF ((1 CC OR COMMA LINK *1 @SUBJ→ - Rel BARRIER NOT-NPMOD) OR (*-1 CC BARRIER NOT-NPMOD OR CC LINK -1 @SUBJ→)) ;

MAP:subjCoorTEST (@←SUBJ) TARGET Nom IF ((1 CC OR COMMA LINK *1 @←SUBJ BARRIER NOT-NPMOD) OR (*-1 CC BARRIER NOT-NPMOD OR CC LINK -1 @←SUBJ)) ;

MAP:subjCoorTEST (@SUBJ→) TARGET Nom IF ((1 CC OR COMMA LINK *1 @SUBJ→ - Rel BARRIER NOT-NPMOD) OR (*-1 CC BARRIER NOT-NPMOD OR CC LINK -1 @SUBJ→)) ;

MAP:subjCoorTEST (@←SUBJ) TARGET Nom IF ((1 CC OR COMMA LINK *1 @←SUBJ BARRIER NOT-NPMOD) OR (*-1 CC BARRIER NOT-NPMOD OR CC LINK -1 @←SUBJ)) ;

MAP:subj→Num (@SUBJ→) TARGET (num nom) (*1 (n sg gen) BARRIER NOT-A LINK *1 VFIN + Pl3 BARRIER NOT-ADV-PCLE) ;
MAP:←subjNum (@←SUBJ) TARGET (num nom) (*1 (n sg gen) BARRIER NOT-A) (*-1 VFIN + Pl3 BARRIER Nom OR S-BOUNDARY) ;

#MAP:subj>Coor2 (@SUBJ>) TARGET Nom (*-1 CC BARRIER NOT-NPMOD LINK -1 @SUBJ>)(*1 VFIN + Pl3 OR VFIN + Du3 BARRIER NOT-ADV-PCLE) ;
#MAP:<subjCoor1 (@<SUBJ) TARGET Nom IF (1 CC LINK *1 Nom BARRIER NOT-NPMOD)(*-1 VFIN + Pl3 OR VFIN + Du3 BARRIER NOT-ADV-PCLE LINK NOT *-1 Nom BARRIER NOT-ADV-PCLE) ;
#MAP:<subjCoor2 (@<SUBJ) TARGET Nom (*-1 CC BARRIER NOT-NPMOD LINK -1 @<SUBJ LINK *-1 VFIN + Pl3 OR VFIN + Du3 BARRIER NOT-ADV-PCLE LINK NOT *-1 Nom BARRIER NOT-ADV-PCLE) ;
#MAP:subj>Coor3 (@SUBJ>) TARGET Nom IF (1 CC OR COMMA LINK *1 @SUBJ> - Rel BARRIER NOT-NPMOD) ;
#MAP:subj>Coor4 (@SUBJ>) TARGET Nom IF (1 CC OR COMMA LINK *1 @SUBJ> - Rel BARRIER NOT-NPMOD) ;
#MAP:subj>Coor5 (@SUBJ>) TARGET Nom IF (*-1 CC OR COMMA BARRIER NOT-NPMOD LINK *-1 @SUBJ> - Rel BARRIER NOT-NPMOD) ;
MAP:subj→Rel (@SUBJ→) TARGET (nom pl) OR (nom pl3) IF (1 Rel LINK *1 FMAINV LINK *1 VFIN + Pl3) ;
	#$ Dat mat sáhttet háhkkojuvvot, leat ovdalis juo namuhuvvon.
MAP:subj→App (@SUBJ→) TARGET Nom IF (1 COMMA LINK **1 @APP-N← OR @APP-Pron← LINK 1 COMMA LINK 1 VFIN) ;
MAP:subj→Rel (@SUBJ→) TARGET (n nom) OR (pron nom) OR (a nom) IF (*1 Rel BARRIER WORD LINK *1 FMAINV LINK *1 VFIN + Sg3 OR VFIN + Pl3) ;
MAP:subj→App (@SUBJ→) TARGET (n nom) OR (pron nom) (1 COMMA LINK *1 @APP-N← OR @APP-Pron← BARRIER NOT-NPMOD LINK *1 FMAINV) ;
	#$ Jovsset, su irgi, gii lei rehálaš olmmái ii ge hálidan heahppašuhttit su, áiggui earránit sus suoli.


# Rules for complements
MAP:n← (@N←) TARGET (n loc) (-1 (n @SUBJ→)) (1 FMAINV) ; 
MAP:Pron← (@Pron←) TARGET (n loc) - TIME-N (*-1 (pron @SUBJ→) BARRIER NOT-ADV - COMMA LINK NOT 0 Rel) (*1 VFIN BARRIER NOT-ADV-PCLE - COMMA) ; 
	#$ Nu guhká go mii, opposišuvnnas, eat čohkká beaivválaččat daiguin dokumeanttaiguin, de lea bahá vajáldahttit.
#MAP:n< (@N<) TARGET (N Loc)(-1 (N Nom) LINK *-1 FMAINV BARRIER SV-BOUNDARY) ; 

MAP:num← (@Num←) TARGET (pl loc) (*-1 OKTA BARRIER NOT-NPMOD) ;
	#$ Dat lea okta min buoremus girjjiin.

MAP:num← (@Num←) TARGET (sg loc) (*-1 Num BARRIER NOT-A LINK *-1 OKTA BARRIER NOT-NPMOD) ;
	#$ Gáiddusoahpahus lea okta máŋgga molssaeavttus.

MAP:r253 (@Num←) TARGET (sg gen) IF (*-1 NUM BARRIER N OR REAL-CLB OR PUNCT LINK 0 Nom OR Acc LINK NOT 0 Ord) (NEGATE 0 Num) (NEGATE 1 A OR N) (NEGATE -1 COMMA) ;
	#$ Mun vuiten 50 ru.

LIST COUNTABLE = "oassi" "kapihtal" "paragráfa" ;

MAP:n← (@N←) TARGET Loc - Rel (*-1 COUNTABLE BARRIER NOT-A) ;
	#$ Dat lea oassin giellaprográmmas.

#!! * __-fsubj>__ (@-FSUBJ>) for HUMAN Gen; in a NP-clause. To your right is Actio Nom followed by a noun
MAP:-fsubj→ (@-FSUBJ→) TARGET HUMAN + Gen (1 (actio nom) LINK 1 N) ; 
	#$ Máreha čállin teavsttat ledje buoremusat.

 
	# Adverbials - ADVL
 
 
MAP:→cc (@→CC) TARGET ("sihke") (*1 ("ja") OR ("ahte")) ;
MAP:→cc (@→CC) TARGET ("juogo" adv) OR ("jogo" adv) (*1 ("dahje") BARRIER S-BOUNDARY) ;
MAP:advl→cs (@ADVL→CS) TARGET ("beare" adv) (1 CS LINK *1 FMAINV) ;
	#$ Muhto dus ii leat riekti dearpat su beare danin go sáhtát.

LIST ADVL = adv ill com loc po pr ine ela ;

MAP:r39 (@ADVL←) TARGET (n sg loc) IF (-1 ("oktii") OR ("guktii") OR ("golbmii") OR ("njelljii") OR ("vihttii") OR ("geardde")) (0 TIME-N) ;
	#$ Mun ferten málestit guktii vahkus.

SET MOD-ADV = DUSSE OR ("njuolga") OR ("njuolgga") OR EASKKA OR ("gitta") ;

#!! * __f<advl__ (@-F<ADVL) for infinite adverbials
MAP:f←advl (@-F←ADVL) TARGET ADVL - MO - S-BOUNDARY OR TIME-N + Gen OR (sem_route gen) (*-1 SYN-V - VGen - VAbess BARRIER SV-BOUNDARY OR CS) (NEGATE 0 DUSSE OR EASKKA) ;
	#$ Min mielas goit lea veara jurddašit nissongova birra mii boahtá ovdan jearahallamiin.
#!! * __f<advl__ (@-F<ADVL) for infinite adverbials
MAP:fadvl→ (@-FADVL→) TARGET ADVL - MO - S-BOUNDARY OR TIME-N + Gen OR (sem_route gen) (NEGATE *-1 FMAINV BARRIER S-BOUNDARY OR CS) (*1 SYN-V - VGen - VAbess BARRIER SV-BOUNDARY OR CS OR FMAINV) ;
	#$ Anán buorebun odne vuolgit go ihttážii vuordit.
	
	
	
#!! * __s-boundary=advl>__ (@ADVL>) for ADVL that resemble s-booundaries. Mainverb to the right.
MAP:s-boundary=advl→ (@ADVL→) TARGET ADVL + S-BOUNDARY (*1 FMAINV) ;
	#$ Dál de viimmat asttan lohkat reivve.

#!! * __diibmuadvl>__ (@ADVL>) for (diibmu Nom) if first one to the right is Num	
MAP:diibmuadvl→ (@ADVL→) TARGET ("diibmu" nom) (1 Num) ;
	#$ Diibmu golbma manan ruoktot.


	# Infinite object - FOBJ

#!! * __-fobj>__ (@-FOBJ>) for Acc if front of abessive, gerundium, actio locative, perfectum participle or infinitive. First one to the right not allowed to be Acc though
MAP:-fobj→ (@-FOBJ→) TARGET Acc (1 (tv vabess) OR (tv ger) OR (tv actio loc) OR (tv prfprc) OR (tv inf) LINK 0 SYN-V LINK NOT 1 Acc) ; 
	#$ Konvenšuvdnaevttohusa ráhkadettiin delegašuvnnat leat váldán vuhtii Ruoŧa ođđa boazodoallolága, ja boazodoallolágaid maiguin barget dál Norggas.
	#$ Duosttažan go dan dahkat?

#!! * __-fobj>__ (@-FOBJ>) for Acc if human with ADVL-case to the left and transitive infinitive OBJ to the right. First one to the right not allowed to be Acc though
MAP:-fobj→ (@-FOBJ→) TARGET Acc (-1 ADVL + Sem_Hum) (1 (tv inf @←OBJ) LINK NOT 1 Acc) ; 
	#$ Eadni oahpaha nieidasis beaskka goarrut.
	



#!! * __advl>mainV__ (@ADVL>) if; finite mainverb not found to the left, but the finite mainverb is found to the right.
MAP:advl→mainV (@ADVL→) TARGET ADVL (NOT *-1 FMAINV BARRIER S-BOUNDARY) (*1 FMAINV BARRIER SV-BOUNDARY) ; 
	#$ Dál de viimmat asttan lohkat reivve.
	#$ Jos ja go suodjalus ii šat dárbbaš guovllu, dat galgá máhcahuvvot sámi geavahussii, Skum cealká.


#!! * __V<advl__ (@<ADVL) if; finite mainverb found to the left. Not if a comma is found immediately to the left and a finite mainverb is located somewhere to the right of this comma.
MAP:V←advl (@←ADVL) TARGET ADVL - MO - Rel - MOD-ADV - Attr OR TIME-N + Gen OR (sem_route gen) OR Sem_Date OR Sem_Year (*-1 FMAINV BARRIER SV-BOUNDARY) (NEGATE -1 COMMA LINK *1 FMAINV BARRIER S-BOUNDARY) ;
	#$ Giellatekno álggahuvvui 1.8.2001 prošeaktan ráhkadit sámegiela grammatihkalaš analysa.
	#$ Dán filmma leat Kárášjoga nuorat oaidnán, eaige šat vuolgge sirkusii.
	#% Vare livččet jogo galmmas dahje liekkas.

#!! * __advl>v__ (@ADVL>) if; you are ADVL, time-noun or Sem/Route and there is a finite verb to the right in the clause, or if to your right is: de followed by a finite verb. OR: if you are a time-nound and to your right is: go or sentenceboundary followed by a finite verb	
MAP:advl→v (@ADVL→) TARGET ADVL OR TIME-N + Gen OR (sem_route gen) ((*1 FMAINV OR FAUXV BARRIER SV-BOUNDARY) OR (*1 ("de") BARRIER FMAINV LINK 1 FMAINV OR FAUXV) OR (*-1 BOS BARRIER NOT-NPMOD LINK *1 TIME-N + Gen BARRIER NOT-NPMOD LINK *1 ("go") OR S-BOUNDARY BARRIER FMAINV LINK *1 FMAINV OR FAUXV BARRIER SV-BOUNDARY)) ;
	#$ Maŋŋá jápmimis de aliduvvui Gonagas Olav bassin.
	#$ Girkonjárggas fuomášin man ollu negatiiva oainnut dan áigge ledje sámiid vuostá.
	#$ Báhkaid áigge, go boazu ruohttá čoahkkái, de sii lávejit muhtumin mannat alla báktegaskii ja dasa cakkadit dasságo nelgot ja oahpástuvvet olbmo oaidnit ja haksit.
	
#MAP:<advl (@<ADVL) TARGET ADVL (*-1 S-BOUNDARY LINK *-1 FMAINV BARRIER SV-BOUNDARY)(NEGATE *1 FMAINV BARRIER S-BOUNDARY);
	#$ Guovdageainnu guovllut gal leat vel mu mielas sestojuvvon oalle bures dássážii, movt šat guhká.
	
MAP:advl→cs (@ADVL→CS) TARGET Adv (*-1 BOC BARRIER NOT-ADV) (1 CS LINK *1 FMAINV) ;
	#$ Danne go ..
	#$ Nu guhká go ...



#!! * __<advlPoPr__ (@<ADVL) for Po or Pr; if mainverb to the left.
MAP:←advlPoPr (@←ADVL) TARGET Po OR Pr (*-1 FMAINV BARRIER SV-BOUNDARY) ;
#!! * __advlPoPr>__ (@<ADVL) for Po or Pr; if mainverb to the right.
MAP:advlPoPr→ (@ADVL→) TARGET Po OR Pr (*1 FMAINV BARRIER SV-BOUNDARY) ;

#!! * __BOSPo>__ (@ADVL>) for Po; if trapped between BOS to the right and S-BOUNDARY OR COMMA to the left, because the main verb will then automatically be on your right side.
MAP:BOSPo→ (@ADVL→) TARGET Po (*-1 BOS BARRIER FMAINV) (*1 S-BOUNDARY OR COMMA BARRIER FMAINV) (NEGATE 0 @N←) ;
	#$ Divššohasaid birra geat leat uminddegin dahkkon.
	#$ Dán girjji vuođul ja ságastallamiiguin lullisámiin lea munnje báhcán millii ahte internáhttadoaibma ii lean gal alla dásis, muhto internáhttaskuvlii dattetge bohte viššalit lullisámi bearrašat.
	#% Romssa ja davágeaži Norrbottena boazoorohagat ja čearut riikaráji guoras ja konvenšuvdnaguovlluin.

#!! * __<advlComIll__ (@<ADVL) only if; you are Com OR Ill. To your left is a mainverb, and to your right a sentenceboundary, because we don't want there to be another mainverb you potentially could belong to
MAP:←advlComIll (@←ADVL) TARGET Com OR Ill (*-1 FMAINV BARRIER FMAINV OR ("←:→")) (*1 EOC BARRIER FMAINV) (NEGATE 0 (pl loc)) (NEGATE 0 Gen LINK 1 Pr OR Po) ;
	#$ Sis lei unnán dahje ii makkárge oktavuohta earáiguin earretgo internáhtas orodettiin.
	#$ Ii fal runiidan jalges gittiide, muhto meahccái, gosa návddit dávjá ja lunddolaččat fievrridit ráppiid.	

#!! * __<advlEOS__ (@<ADVL) for Po or Pr or Loc; if you are found at the very end of a sentence. A mainverb is needed to the left though.
MAP:←advlEOS (@←ADVL) TARGET Po OR Pr OR Loc (*-1 FMAINV) (*1 EOS BARRIER FMAINV) ;
	#$ Sámediggi lea miehtan sutnje máksit 800 ruvnno juohke árgabeaivvi ovddas, muhto ii fal lávvordagaid, sotnabeivviid ja bassebeivviid ovddas.
	#$ Dat sáhttet leat ovttasbargošiehtadusat oanahis áigái, dahje oktasašdoallu muhtin áiggiid jagis, dahje vaikko miehtá jagi.
	#$ Sosiálkuráhtorat eai gávdnon gilis ovdalgo 1960-logus.
	#% Daid sáhttá heaŋggastit dan heargái mii daid eará goahtemuoraid lea guoddimin, guokte bealji goappáge beallái hearggi.
	#Comment: Sámi dutkan ii leat dan dihte soaittáhagas válljejuvvon dutkansuorgi. <== galggašii doaibmat dalle go 'leat' oažžu rivttes analysa. 


#!! * __<advlGen__ (@<ADVL) for (N Gen) if mainverb to the left and no noun to the right
MAP:←advlGen (@←ADVL) TARGET (n gen) (*-1 FMAINV BARRIER SV-BOUNDARY) (NOT *1 N BARRIER NOT-A) (NOT 1 Po) ;
	#$ Ja dat rievvun lea dáhpáhuvván ollu gerddiid.
	#$ Nubbi ja goalmmát lađas gustojit seamma láhkai virgehasaid ja earrásiid fápmudeapmái dahkat mearrádusa meahcceeatnamiid nuppástuvvan geavaheamis.
MAP:advl→ (@ADVL→) TARGET (n gen) (*1 FMAINV BARRIER SV-BOUNDARY OR Po) (NOT *1 N BARRIER NOT-A) ;
MAP:advl→ (@ADVL→) TARGET Ess (*1 FMAINV BARRIER SV-BOUNDARY LINK NOT *1 Nom BARRIER NOT-NPMOD) (NEGATE *-1 REAL-V BARRIER S-BOUNDARY) ;
	#$ Čuoikan ...

#!! * __advlEss>__ (@<ADVL) for weather and time Ess, if FMAINV to the left.
MAP:advlEss→ (@←ADVL) TARGET (wthr ess) OR TIME-N + Ess (*-1 FMAINV BARRIER SV-BOUNDARY) ;
	#$ Boazosápmelaččain ii leat bassin vejolaš fievrridit gálvvu gerresiiguin.
	
MAP:Acc←advl (@←ADVL) TARGET TIME-N + Acc OR ("gaska" acc) (*-1 FMAINV BARRIER SV-BOUNDARY) (NEGATE 1 (a nom)) ;
MAP:Accadvl→ (@ADVL→) TARGET TIME-N + Acc OR ("gaska" acc) (*1 FMAINV BARRIER SV-BOUNDARY) ;


MAP:gitta→adv (@→ADVL) TARGET ("gitta" adv) (NOT *-1 ("váldit") OR ("doallat") OR ("čatnat") OR ("bidjat") OR LEAT OR ("mannat") BARRIER SV-BOUNDARY) (*1 DOHKO OR DOPPE OR Loc OR Ill OR Sem_Time OR Po BARRIER NOT-NPMOD) ;
MAP:→advl (@→ADVL) TARGET Adv IF (0 MOD-ADV) (*1 @ADVL BARRIER NOT-NPMOD) ;

#!! * __comma<advlEOS__ (@<ADVL) for Adv if; mainverb is to the left. Comma to the left and mainverb to the right in the same clause is not allowed
MAP:←advlADV (@←ADVL) TARGET Adv (*-1 FMAINV BARRIER SV-BOUNDARY) (NEGATE -1 COMMA LINK *1 FMAINV BARRIER S-BOUNDARY) ;
	#$ Guovdageainnu guovllut gal leat vel mu mielas sestojuvvon oalle bures dássážii, movt šat guhká.


#!! * __advl>inbetween__ (@ADVL>) for Adv; if inbetween two sentenceboundaries where no mainverb is present.
MAP:advl→inbetween (@ADVL→) TARGET Adv (*-1 BOC BARRIER FMAINV) (*1 S-BOUNDARY BARRIER FMAINV) ;
	#$ Son muitala maid ahte nu guhká go orohagat eai vuosttal mearkkaid, de sii lávejit juolludit mearkkaid ohcciide.	
	#$ Dál de viimmat asttan čállit reivve. 

#!! * __comma<advlEOS__ (@<ADVL) for Adv if; comma found to the left and the finite mainverb to the left of comma. To the right is the end of the sentence.
MAP:comma←advlEOS (@←ADVL) TARGET Adv (*-1 COMMA BARRIER V LINK *-1 FMAINV BARRIER S-BOUNDARY) (*1 EOS BARRIER FMAINV) ;
	#$ Guovdageainnu guovllut gal leat vel mu mielas sestojuvvon oalle bures dássážii, movt šat guhká.
	#$ De eai leat šat dušše tálat, muhto bustávat maid.
	
MAP:←advlØ (@←ADVL) TARGET Adv OR TIME-N (*-1 Nom) (*1 Po OR EOS BARRIER SV-BOUNDARY) ;
	#$ Maid mii dál vihtaniiguin?
	#$ Lákca vel alde!
	#$ Sámi dutkan ii leat dan dihte soaittáhagas válljejuvvon dutkansuorgi.
	#% Odne vai ihttin? 
	#% Juoba ge dán áigodagas.
	#Comment: Dát doaibmá bures ellipsaide main lea HNOUN, muhto ferten gávdnat eará čovdosa.
	#$ Ođđa viessu boahtte jagi.

#MAP:nr2<advlEOS (@<ADVL) TARGET (N Loc) (*-1 S-BOUNDARY BARRIER V LINK *-1 FMAINV BARRIER S-BOUNDARY)(*1 EOS BARRIER FMAINV);
	#$ 'De eai leat šat dušše tálat, muhto bustávat maid.
	#$ Guovdageainnu guovllut gal leat vel mu mielas sestojuvvon oalle bures dássážii, movt šat guhká.

#!! * __BOSadvl>__ (@ADVL>) if; you are N Loc or N Ill and found sentence initially and there is a main verb somewhere to the right. No barrier for the mainverb; based on the thought that first one to your right is probably a sentenceboundary.
MAP:BOSadvl (@ADVL→) TARGET Loc OR (n ill) (*-1 BOS BARRIER FMAINV OR COMMA) (*1 FMAINV) (NEGATE 0 @N←) ;
	#$ Das makkár hálddašanmálle šaddá lea maid hui ollu dadjamuš.
	#$ Eará guovlluin gos leat vel unnit sámit go Finnmárkkus, leamaš dákkár ákkain vel stuorát deaddu almmolaš ságastallamis. 
	#$ Mearrádusaide nugo namahuvvo nuppi lađđasis bustávas e ja f gáibiduvvo ovttamielalašvuohta.
	#% Sánddatlovttat Nordlánddas ja Romssas gos mánát orro skuvllastobu bajábealde, ledje dábálaččat gitta 1900-lohkui.
		
#!! * __cleanupILL<advl__ (@<ADVL) for N Ill if; there are no boundarysymbols to your left, if you arent already @N< OR @APP-N<, and no mainverb is to yor left.
MAP:cleanupILL←advl (@←ADVL) TARGET (n ill) (NEGATE *-1 BOUNDARYSYMBOLS BARRIER V) (NEGATE 0 @N← OR @APP-N← OR ("doarvi")) (NEGATE *1 FMAINV) ;
	#$ Riekti oassálastit luondduriggodagaid hálddašeamis sáhttá čađahuvvot dakko bokte ahte Sámediggi nammada áirasiid oktasaš stivrenorgánaide, nu movt Finnmárkoopmodahkii ja guovllu boraspirelávdegottiide.
	#% Mearrádusaide nugo namahuvvo nuppi lađđasis bustávas e ja f gáibiduvvo ovttamielalašvuohta.
	#% Guovdageainnus muittán ahte roagga gándajienat eahketbeaivve huike: Muorravissui, muorravissui!

MAP:←advlXXXX (@←ADVL) TARGET (n ill) (*-1 S-BOUNDARY OR COMMA BARRIER FMAINV) (*1 S-BOUNDARY OR COMMA BARRIER FMAINV) ; #LINK *-1 FMAINV BARRIER SV-BOUNDARY
	#$ Ii fal runiidan jalges gittiide, muhto meahccái, gosa návddit dávjá ja lunddolaččat fievrridit ráppiid.


#!! * __cleanupPo__ (@ADVL) for Po: This rule tags all Po:s as @ADVL if they haven't gotten a tag somewhere along the way. 
MAP:cleanupPo (@ADVL) TARGET Po (0 Po) ; 
	#$ Muhto man sivas?
	#$ Čakčageasi birra.

#!! * __cleanupPr__ (@ADVL) for Po: This rule tags all Pr:s as @ADVL if they haven't gotten a tag somewhere along the way.
MAP:cleanupPr (@ADVL) TARGET Pr (0 Pr) ; 
	#$
	#% Sámeskuvla šattai oktasaš deaivvadanbáikin hárvelohkosaš ja hádjánan lullisámi minoritehtii geaid ruovttut ledje Femundmárkkus gitta Davvi-Rátnui, - badjel 1000 km guhkkosaš guovlu.



	# Infinite subjects - FSUBJ
		
#!! * __-fsubj>asAcc__ (@-FSUBJ>) for HUMAN Acc; if there is a verb @<OBJ to your left	
MAP:-fsubj→ (@-FSUBJ→) TARGET HUMAN + Acc (*1 (v @←OBJ) BARRIER NOT-ADV-PCLE) ;
	#$ Divtte bálvaleddjiidat ássat Gosenis! 

#!! * __-f<obj__ (@-F<OBJ) for Acc if there is a transitive verb + SYN-V to your left
MAP:-f←obj (@-F←OBJ) TARGET Acc (*-1 (v tv) + SYN-V BARRIER REAL-V OR S-BOUNDARY) ; 
	#$ Máret muitalii Máhte oaidnán guovžža.
	#$ Gurssa ulbmil lea oahppat goarrut Ivgu gávtti.

#!! * __-fsubj>IV__ (@-FSUBJ>) for Acc; if there is an IV-verb acting as a @<OBJ to your right
MAP:-fsubj→ (@-FSUBJ→) TARGET Acc (*1 (iv @←OBJ) BARRIER NOT-ADV-PCLE) ; 
	#$ Sii lohket fatnasa gopmánan.

#!! * __-fsubj>asGen__ (@-FSUBJ>) for Gen;
MAP:-fsubj→asGen (@-FSUBJ→) TARGET Gen (*1 (actio loc @←ADVL) OR (tv vabess) BARRIER NOT-ADV-PCLE) ;
	#$ Mun gal ceavzzán du goargŋumis.
	#$ Diet dáhpáhuvai mu dieđikeahttá.
	
#!! * __f<subj__ (@-F<SUBJ) for Nom if; (V @<OBJ) to the left. 
MAP:f←subj (@-F←SUBJ) TARGET Nom (*-1 (v @←OBJ) BARRIER NOT-NPMODADV - @CNP) ;	
	#$ Mii oaidnit vuoittuid beales leat elektruvnnalaš gálvvut hui bivnnuhat ja eai dábálaš bargobiergasat.
	#Comment: needs some more testing in another corpus
 
 
 
	# Predicatives - PPRED
 
MAP:←ppred (@←PPRED) TARGET (pl nom) OR Ess (*-1 @←SPRED + Pl BARRIER NOT-ADV-PCLE OR ("ain")) ;
	#$ Mus leat gieđat nu galbmasat.
MAP:←ppred (@←PPRED) TARGET (sg nom) OR Ess (*-1 @←SPRED + Sg BARRIER NOT-ADV-PCLE OR ("ain")) ;
	# Márehis lea oaivi bávččas. 


MAP:→n (@→N) TARGET (num acc) ((1 MEASR-N + (sg gen) LINK 1 Po) OR (1 (num acc) LINK 1 MEASR-N + (sg gen) LINK 1 Po)) ;
	#$ Noađđespagáin leat dat geažit guokte golbma tumá guhku.
MAP:→a (@→A) TARGET (num acc) (1 TIME-N + (sg gen) LINK 1 A) ;
	#$ Arkiivaávdnasat galget sáddejuvvot go leat sullii 25-30 jagi boarrásat.
MAP:→a (@→A) TARGET TIME-N + Acc (-1 Num) (1 A) ;
	#$ Sápmelaččaid historjá álbmogin lea duháhiid jagiid boaris.

#!! * __<opredAAcc__ (@<OPRED) for A Acc; if an other accusative to the left, and a transtive verb to the left of it. OR: if a transitive verb to the left, and an accusative to the left of it.
MAP:←opredAAcc (@←OPRED) TARGET (a acc) IF ((*-1 Acc BARRIER NOT-ADV-PCLE LINK *-1 FMAINV + TV BARRIER NOT-ADV-PCLE) OR (*-1 FMAINV + TV BARRIER NOT-ADV-PCLE LINK *-1 Acc BARRIER SV-BOUNDARY)) ;	
	#$ Son ráhkada gáhkuid hui buriid.
	#$ Gáhkuid son ráhkada hui buriid.

#!! * __TV<obj__ (@<OBJ) for Acc; if there is a transitive mainverb to the left in the clause. Not for Rel. Not if you are a numeral followed by a measure-noun
MAP:TV←obj (@←OBJ) TARGET Acc - Rel (*-1 FMAINV + TV BARRIER SV-BOUNDARY) (NEGATE -1 COMMA LINK *2 TRANS-V + FMAINV BARRIER SV-BOUNDARY) (NEGATE 0 Num LINK 1 MEASR-N) ;
	#$ Stueng háliidii ge oažžut johtui buoret oktavuođa sámi ja Bolivia eamiálbmot nuoraid gaskkas, go nuorat leat eamiálbmogiid boahtteáigi, mahkáš nuoraid lonuhanprográmma.
	
	

#!! !sma object
MAP:←obj (@←OBJ) TARGET (nom pl ←sma→) - Rel (*-1 FMAINV + TV BARRIER SV-BOUNDARY) (NEGATE -1 COMMA LINK *2 TRANS-V + FMAINV BARRIER SV-BOUNDARY) (NEGATE 0 Num LINK 1 MEASR-N) ;
MAP:obj→ (@OBJ→) TARGET (nom pl ←sma→) (*1 FMAINV BARRIER SV-BOUNDARY) ;


#!! * __<advlMeasr__ (@<ADVL) for (Num Acc); if finite IV-mainverb to the left, measure-noun to the right
MAP:←advlMeasr (@←ADVL) TARGET (num acc) ((*-1 FMAINV + IV BARRIER SV-BOUNDARY) OR (*-1 (n loc) BARRIER NOT-Attr LINK *-1 ("bargat") + TV BARRIER SV-BOUNDARY)) (*1 MEASR-N + (sg gen) BARRIER NOT-NPMODADV LINK NOT 1 Po) ;
	#$ Mánná lea golbma jagi boaris.
	#$ 1982:s son roasmmohuvai bávkilahttima oktavuođas Álttádulvadeami vuostá, váldojuvvui gitta, muhto báhtarii Kanadai, ja orui doppe álgoálbmogiid luhtte moadde jagi.
	#$ Gáre-goaski barggai suohkanis guhtta mánu. 
	#% Álggos coggalii Svein Kristian Anti vuosttaš spáppa Sørøy Glimt mollii 22 minuvtta maŋŋel go čiekčamat ledje álgán Niitoguolban stadionas. Acc @>CS (Illatiiva gaskkas?) 
	
#!! * __<objMeasr__ (@<OBJ) for Num Acc; if finite TV-mainverb to the left, measure-noun to the right
MAP:←objMeasr (@←OBJ) TARGET (num acc) (*-1 FMAINV + TV BARRIER SV-BOUNDARY) (*1 MEASR-N + (sg gen) BARRIER NOT-NPMODADV LINK NOT 1 Po) ;
	#$ Juohke mánná oaččui guokte ja eanemusat golbma mánu oahpahusa jagis.
	#$ De son barggai guokte jagi buohccedivššárin Kolvereidas Trøndelagas, dan maŋŋá son lea bargan Kárášjogas.
	#% Son bijai vuosttaš spáppá mollii 22 minuvtta maŋŋel go čiekčamat ledje álgan.

#!! * __<advlMeasr2__ (@<ADVL) for MEASR-N + Acc; if (Num Pl) to the left and mainverb to the left of it
MAP:←advlMeasr2 (@←ADVL) TARGET MEASR-N + Acc (-1 (num pl) LINK *-1 FMAINV BARRIER SV-BOUNDARY) ;
	#$ Sin jahkásaš johtolagat sáhtte leat čuđiidge kilomehteriid, ja olle dálá Suomabeale vuovdeguovlluid dálveorohagain Jiekŋameara rittu geasseorohagaide.

#!! * __advlMeasr>__ (@ADVL>) for Num Acc;
MAP:advlMeasr→ (@ADVL→) TARGET (num acc) (1 MEASR-N + (sg gen) LINK *1 FMAINV BARRIER SV-BOUNDARY) ;
	#$ Mánná lea golbma jagi boaris.
	#% De son barggai guokte jagi buohccedivššárin Kolvereidas Trøndelagas, dan maŋŋá son lea bargan Kárášjogas.
	
MAP:advl→ (@ADVL→) TARGET MEASR-N + Acc (-1 (num pl)) (*1 FMAINV BARRIER SV-BOUNDARY) ;

#!! * __Obj>__ (@OBJ>) for Acc; if there is a finite mainverb to the right in the clause. A really simple rule with no other restrictions.. 
MAP:Obj→ (@OBJ→) TARGET Acc (*1 FMAINV BARRIER SV-BOUNDARY) ;
	#$ Dan duođaštit čállosat maid politihkkárat leat čálašan gieskat e-poasttain ja maid leat mediai suođđan.
	#$ Dán filmma leat Kárášjoga nuorat oaidnán, eaige šat vuolgge sirkusii.

#!! * __s-boun<obj__ (@<OBJ) for Acc; if sentenceboundary to your left and a transitive mainverb to the left futher to the left
MAP:s-boun←obj (@←OBJ) TARGET Acc - Num (*-1 S-BOUNDARY BARRIER FMAINV + TV LINK *-1 FMAINV + TV BARRIER SV-BOUNDARY) ;
	#$ Sii bukte skeaŋkkaid mánnái: golliid, suovvasiid ja myrra.
	#$ Iige láhka lihkahala vuoigatvuođaid mat vuođđuduvvet eará vuđđosii, ovdamearkan dakkáriid mat vuođđuduvvet dahkkojuvvon šiehtadussii.

#!! * __<objIV__ (@<OBJ) for Acc; if there is an intransitive mainverb in the clause. Not for Rel or Num. Not if you are a numeral followed by a measure-noun
MAP:←objIV (@←OBJ) TARGET Acc - Rel - Num (*-1 FMAINV + IV BARRIER SV-BOUNDARY) (NEGATE -1 COMMA LINK *2 TRANS-V + FMAINV BARRIER SV-BOUNDARY) (NEGATE 0 Num LINK 1 MEASR-N) ;
	#$ 1980:s manai Anny Hámmárfestii vázzit buohccedivššárskuvlla.
	#$ Ja de sii bidje čázi duoldat ja juopmomielkki dasa, ja de dan juhke. 

MAP:obj→rel (@OBJ→) TARGET Acc (1 Rel LINK *1 FMAINV BARRIER SV-BOUNDARY LINK *1 FMAINV + TV BARRIER SV-BOUNDARY) ;
	#$ Danne sáhttá váttisvuođaid mat čuožžilit gaskasaš konvenšuvnna beaivválaš dilis, buoremusat čoavdit riikkaidgaskasaš orgánain, mas leat loahpalaš mearridanváldi.




# These nouns in essiv get @ADVL:
LIST ESS-ADVL = sem_time sem_wthr "baika" "čakčaseavdnjat" "čuoika" "čuovga" "varra" ;

# These nouns/adjectives in essiv can get @ADVL:
LIST ESS-PROB-ADVL-N = ("bassi" n) "boaris" ("nuorra" n) ;

#!! * __<advlEss__ (@<ADVL) for ESS-ADVL if; FMAINV to the left
MAP:←advlEss (@←ADVL) TARGET ESS-ADVL + Ess IF (*-1 FMAINV BARRIER SV-BOUNDARY) ;
	#$ Beaskkain gal bivvá buolašin.
	#$ Dilli joatkašuvvá dákkárin guhkás boahtteáigái.
	
#!! * __IV<spredEss__ (@<SPRED) for N Ess if; FMAINV to the left is intransitive or bargat
MAP:IV←spredEss (@←SPRED) TARGET (n ess) - ESS-ADVL OR (a ess) OR (a ord ess) IF (*-1 FMAINV + IV OR ("bargat") + FMAINV OR ("ollit") + FMAINV BARRIER SV-BOUNDARY - MO) ;
	#$ Son muittaša movt ovdal lávii ja jietna šaddá litnáseabbon.
	#$ Sii olihedje diibmá nu movt dán jagi nubbin.

#!! * __<opredEss__ (@<OPRED) for (N Ess), (A Ess) if; transitive mainverb to the left in the clause. If accusative to the left or to the right, or if Inf or ahte to the right, or if there is a noun to the right followed by an Inf
MAP:←opredEss (@←OPRED) TARGET (n ess) OR (a ess) IF (*-1 FMAINV + TRANS-V BARRIER SV-BOUNDARY) ((*-1 Acc BARRIER NOT-NPMODADV - ADVLCASE) OR (*1 Acc BARRIER NOT-NPMOD) OR (*1 Inf OR ("ahte" cs) BARRIER NOT-ADV-PCLE) OR (*1 N BARRIER NOT-NPMOD LINK 1 Inf)) ;
	#$ Gaup dojii stivrrana hárjehallamiin, muhto oaččui luoikkasin eará stivrrana.
	#$ Olbmot ledje dilssit buktit bierggu máksun mánáideaset dikšumis.

#!! * __Acc<opredEss__ (@<OPRED) for (N Ess), (A Ess) if; transitive mainverb to the left in the clause, and an accusative cased Rel left to the verb
MAP:Acc←opredEss (@←OPRED) TARGET (n ess) OR (a ess) OR (pron ess) IF (*-1 FMAINV + TRANS-V BARRIER SV-BOUNDARY - FAUXV LINK *-1 Acc BARRIER S-BOUNDARY) ;
	#$ Organisašuvnna bláđđi man gohčodit Fokusin muitala ahte gonagas Olav su áiggistis lei bivdán beassat leat servodaga suodjaleaddji.

#!! * __onlyV<opred__ (@<OPRED) for (N Ess) if; there is a transitive mainverb to the left. Usually there needs to be an Acc to the left, but here it is not needed
MAP:onlyV←opred (@←OPRED) TARGET (n ess) (*-1 @-FMAINV + TRANS-V OR @+FMAINV + TRANS-V BARRIER SV-BOUNDARY) ;
	#$ Eaba dahkan gullinge.
	#$ Borghild Johansen nevttii Ovllážin, gii gávnnadii guovžžain vuovddis.
	#$ Mu mielas lei váttis joatkit mearrabivdin.

#!! * __onlyV<opred2__ (@<OPRED) for (N Ess) if; 
MAP:onlyV←opred2 (@-F←OPRED) TARGET (n ess) (*-1 FMAINV + TRANS-V BARRIER SV-BOUNDARY) ;
	#$ Oahpaheaddjin mun dovden heahtin go in máhttán sámegiela.

MAP:spred→Ess (@SPRED→) TARGET (n ess) OR (a ess) IF (*1 FMAINV + IV OR ("bargat") + FMAINV BARRIER SV-BOUNDARY) ;
MAP:opred→Ess (@OPRED→) TARGET (n ess) OR (a ess) IF (*1 FMAINV + TRANS-V BARRIER SV-BOUNDARY) ;
#MAP:<spredEss (@<SPRED) TARGET (A Ess) IF (*-1 FMAINV BARRIER SV-BOUNDARY);
#MAP:spred>Ess (@SPRED>) TARGET (A Ess) IF (*1 FMAINV BARRIER SV-BOUNDARY);




MAP:→advl (@→ADVL) TARGET Adv IF (0 DUSSE OR EASKKA) (*1 @ADVL BARRIER NOT-NPMOD) ;
	#$ Jus in leat váiban, de manan nohkkat easkka gaskaija.

#!! !!SUBJ MAPPING - leftovers
MAP:←subj (@←SUBJ) TARGET NP-HEAD-NOM - A OR DUPRON + Nom OR (num nom) (*-1 FMAINV BARRIER (":") OR S-BOUNDARY) ;

#!! * __subj>ifV__ (@SUBJ>) for NP-HEAD-NOM, DUPRON or (Num Nom) if; a finite mainverb is found to the right. This is a cleanup rule for subjects
MAP:subj→ifV (@SUBJ→) TARGET NP-HEAD-NOM - A OR DUPRON + Nom OR (num nom) (*1 FMAINV BARRIER (":")) (NEGATE *1 @SUBJ→ + (pron rel) BARRIER FMAINV OR FAUXV LINK NOT *2 FMAINV BARRIER EOS) ;
	#$ Lean ieš oaidnán dange.
	#$ Mii Sámedikki nuoraidpolitihkalaš lávdegottis (SNPL) áigut čalmmustahttit árbevirolaš ja ođđaáigásaš sámi ealáhusaid.
	#% #$ Ávdugasat sii geat moraštit.
	
#!! * __hnoun>ifV__ (@SUBJ>) for NP-HEAD-NOM, DUPRON if. The counterpart of subj>ifV. You are HNOUN if there is a finite verb to your right, but NOT if there is a finite verb after a relative clause
MAP:hnoun→ifV (@HNOUN) TARGET NP-HEAD-NOM - A OR DUPRON + Nom (*1 FMAINV BARRIER (":")) (NEGATE *1 @SUBJ→ BARRIER FMAINV LINK 2* FMAINV BARRIER EOS) ;
	#$ Ávdugas dat guhte vurke dán girjji profehtalaš sániid.
	#$ Ja ávdugas son guhte oskkui.
	#$ Ávdugasat sii geat moraštit.
	#$ Gonagas Agrippa ja dii buohkat geat lehpet dás minguin!
	#$ Olbmot geat ellet náitoslágan dahje guimmešvuođalágan gaskavuođain.
	#$ Áhččámet, don guhte leat almmis. 
	#$ Dat geat ieža eai máhttán oppanassiige lohkat girjjiid.
	#% Sihke son ja su viellja Paul Danielsen, gii lei ovdaolmmoš vieljas maŋis, vácciiga osiid skuvlla Haviikkas.


#!! !!OBJ MAPPING - leftovers
MAP:←obj (@←OBJ) TARGET NP-HEAD-ACC OR DUPRON + Acc (*-1 FMAINV BARRIER (":") OR S-BOUNDARY) ;
MAP:obj→ (@OBJ→) TARGET NP-HEAD-ACC OR DUPRON + Acc (*1 FMAINV BARRIER (":")) (NOT *-1 Interj BARRIER NOT-NPMOD) ;


#!! !!HNOUN MAPPING

MAP:hnounNom (@HNOUN) TARGET NP-HEAD-NOM - A OR (num nom) (NEGATE *0 REAL-V BARRIER (":")) (NEGATE *-1 PUNCT BARRIER (":") LINK -1 WORD) ;
	#$ Fiskes, rukses, alit, ruoná ja muđui buotlágaš ivnnit.
	#$ Bargolávdegotti bargu: Álgobargu lei čielggadit min mandáhta.

MAP:hnounAdvl (@HNOUN) TARGET ADVLCASE OR Acc (NEGATE *0 REAL-V OR @HNOUN) ;
	#$ Juoba ge dán áigodagas.
MAP:hnounInterj (@HNOUN) TARGET Acc (*-1 Interj BARRIER NOT-NPMOD) ;



MAP:HNOUN←advl (@N←) TARGET ADVL (*-1 @HNOUN - Num BARRIER CRD) ; 
MAP:HNOUN←advl (@N←) TARGET ADVL (-1 CRD LINK -1 @N←) (1 EOS) ; 
MAP:advl→HNOUN (@ADVL→) TARGET ADVL (*1 @HNOUN BARRIER CRD) ; 
MAP:HNOUN←obj (@←OBJ) TARGET Acc (*-1 @HNOUN) ;
	#% Birasgáhttenlihkadus ja álgoálbmogat - ovttasbargit vai vuostálágaid? 
MAP:obj→HNOUN (@OBJ→) TARGET Acc (*1 @HNOUN) ; 
MAP:HNOUN←spred1 (@←SPRED) TARGET (a nom) (*-1 @HNOUN) ; 
	#$ Dii guoktilaččat!
MAP:spred→HNOUN (@SPRED→) TARGET (a nom) (*1 @HNOUN) ; 
MAP:HNOUN←spred2 (@←SPRED) TARGET (a nom) OR (n nom) (*-1 PUNCT BARRIER REAL-V LINK *-1 @HNOUN) ; 
	#$ Birasgáhttenlihkadus ja álgoálbmogat – ovttasbargit vai vuostálagaid?
MAP:HNOUN←spred3 (@←SPRED) TARGET (n ess) (*-1 Nom BARRIER V) ;
	#$ Mu dárkileamos muittut internáhttaskuvllas leat dán áigodagas; 10 vuosttaš jagi álbmot- ja joatkkaskuvlla (framhaldskuvlla) oahpaheaddjin, ja muhtin áigodagaid internáhttahoavdan, 12 maŋimus jagi nuoraidskuvlla jođiheaddjin ja eanaš oahppit orro internáhtas.
MAP:HNOUNcoor (@HNOUN) TARGET N (-1 @CNP LINK -1 @HNOUN) ;
	#$ Oslos ja Londonis.

MAP (@ADVL) Adv (-1 BOS) ;
#!! * __@<ADVLcoor__ (@<ADVL) for ADVL if @CNP to the left and @ADVL to the left of it
MAP:@←ADVLcoor (@←ADVL) TARGET ADVL (-1 @CNP LINK -1 @ADVL) ;
	#$ Odne vai ihttin?
	
	#$ Báhpaeamit, Margrethe Wiig, gii lei gasku giellamoivvi, ráhkadii iežas sárgumiiguin sámegiela Áppesa, mii lei stuorra ávkin sámegiela oahpahusas.

#!! ! __missingX__ adds @X to all missings
MAP:missingX (@X) TARGET (?) ;

AFTER-SECTIONS

REMOVE:WORD WORD - ALLSYNTAG ;

#!! ! __therestX__ adds @X to all what is left, often errouneus disambiguated forms

MAP:leftoversX (@X) TARGET WORD ;


SUBSTITUTE (←sme→) (*) TARGET (←sme→) ;
SUBSTITUTE (←smj→) (*) TARGET (←smj→) ;
SUBSTITUTE (←sma→) (*) TARGET (←sma→) ;

#MT RULES
#SUBSTITUTE ("váldit" V) ("váldit2" V) ("váldit" V) (*1 ("vuostá" Adv) BARRIER SV-BOUNDARY OR REAL-V) ;
#REMCOHORT TARGET ("vuostá" Adv) (*-1 ("váldit2") BARRIER SV-BOUNDARY OR REAL-V) ;


#for view - kommenteres inn for view
#SUBSTITUTE (@>N) (@>N <mod_obj>) TARGET (@>N) (*1 OBJ BARRIER NOT-NPMOD OR HEAD) ;
#SUBSTITUTE (@>N) (@>N <mod_subj>) TARGET (@>N) (*1 SUBJ BARRIER NOT-NPMOD OR HEAD) ;
#SUBSTITUTE (@>N) (@>N <mod_advl>) TARGET (@>N) (*1 @ADVL BARRIER NOT-NPMOD OR HEAD) ;
#SUBSTITUTE (@>A) (@>A <mod_obj>) TARGET (@>A) (*1 OBJ BARRIER NOT-NPMOD OR HEAD) ;
#SUBSTITUTE (@>A) (@>A <mod_subj>) TARGET (@>A) (*1 SUBJ BARRIER NOT-NPMOD OR HEAD) ;
#SUBSTITUTE (@>A) (@>A <mod_advl>) TARGET (@>A) (*1 @ADVL BARRIER NOT-NPMOD OR HEAD) ;
#SUBSTITUTE (@N<) (@N< <compl_obj>) TARGET (@N<) (*-1 OBJ BARRIER NOT-NPMOD OR HEAD) ;
#SUBSTITUTE (@N<) (@N< <compl_subj>) TARGET (@N<) (*-1 SUBJ BARRIER NOT-NPMOD OR HEAD) ;
#SUBSTITUTE (@N<) (@N< <compl_advl>) TARGET (@N<) (*-1 @ADVL BARRIER NOT-NPMOD OR HEAD) ;
#SUBSTITUTE (@Num<) (@Num< <compl_obj>) TARGET (@Num<) (*-1 OBJ BARRIER Num) ;
#SUBSTITUTE (@Num<) (@Num< <compl_subj>) TARGET (@Num<) (*-1 SUBJ BARRIER Num) ;
#SUBSTITUTE (@Num<) (@Num< <compl_advl>) TARGET (@Num<) (*-1 @ADVL BARRIER Num) ;
#SUBSTITUTE (@>Num) (@>Num <compl_advl>) TARGET (A @>Num) OR (Pron @>Num) (*1 @ADVL BARRIER Num) ;
#SUBSTITUTE (@>Num) (@>Num <compl_obj>) TARGET (A @>Num) OR (Pron @>Num) (*1 OBJ BARRIER Num) ;
#SUBSTITUTE (@>Num) (@>Num <compl_subj>) TARGET (A @>Num) OR (Pron @>Num) (*1 SUBJ BARRIER Num) ;
#SUBSTITUTE (@Pron<) (@Pron< <compl_obj>) TARGET (@Pron<) (-1 OBJ) ;
#SUBSTITUTE (@Pron<) (@Pron< <compl_subj>) TARGET (@Pron<) (-1 SUBJ) ;
#SUBSTITUTE (@Pron<) (@Pron< <compl_advl>) TARGET (@Pron<) (-1 @ADVL) ;

#For MT:

SUBSTITUTE (sem_act) (*) TARGET (sem_act) ;
SUBSTITUTE (sem_ani) (*) TARGET (sem_ani) ;
SUBSTITUTE (sem_aniprod) (*) TARGET (sem_aniprod) ;
SUBSTITUTE (sem_body) (*) TARGET (sem_body) ;
SUBSTITUTE (sem_build) (*) TARGET (sem_build) ;
SUBSTITUTE (sem_build-part) (*) TARGET (sem_build-part) ;
SUBSTITUTE (sem_clth) (*) TARGET (sem_clth) ;
SUBSTITUTE (sem_clth-jewl) (*) TARGET (sem_clth-jewl) ;
SUBSTITUTE (sem_ctain) (*) TARGET (sem_ctain) ;
SUBSTITUTE (sem_ctain-clth) (*) TARGET (sem_ctain-clth) ;
SUBSTITUTE (sem_ctain-abstr) (*) TARGET (sem_ctain-abstr) ;
SUBSTITUTE (sem_curr) (*) TARGET (sem_curr) ;
SUBSTITUTE (sem_date) (*) TARGET (sem_date) ;
SUBSTITUTE (sem_edu) (*) TARGET (sem_edu) ;
SUBSTITUTE (sem_emo) (*) TARGET (sem_emo) ;
SUBSTITUTE (sem_event) (*) TARGET (sem_event) ;
SUBSTITUTE (sem_feat-psych) (*) TARGET (sem_feat-psych) ;
SUBSTITUTE (sem_fem) (*) TARGET (sem_fem) ;
SUBSTITUTE (sem_food) (*) TARGET (sem_food) ;
SUBSTITUTE (sem_furn) (*) TARGET (sem_furn) ;
SUBSTITUTE (sem_group) (*) TARGET (sem_group) ;
SUBSTITUTE (sem_hum) (*) TARGET (sem_hum) ;
SUBSTITUTE (sem_year) (*) TARGET (sem_year) ;
SUBSTITUTE (sem_lang) (*) TARGET (sem_lang) ;
SUBSTITUTE (sem_mal) (*) TARGET (sem_mal) ;
SUBSTITUTE (sem_mat) (*) TARGET (sem_mat) ;
SUBSTITUTE (sem_measr) (*) TARGET (sem_measr) ;
SUBSTITUTE (sem_money) (*) TARGET (sem_money) ;
SUBSTITUTE (sem_obj) (*) TARGET (sem_obj) ;
SUBSTITUTE (sem_obj-clo) (*) TARGET (sem_obj-clo) ;
SUBSTITUTE (sem_obj-el) (*) TARGET (sem_obj-el) ;
SUBSTITUTE (sem_org) (*) TARGET (sem_org) ;
SUBSTITUTE (sem_perc-emo) (*) TARGET (sem_perc-emo) ;
SUBSTITUTE (sem_plant) (*) TARGET (sem_plant) ;
SUBSTITUTE (sem_plc) (*) TARGET (sem_plc) ;
SUBSTITUTE (sem_plc-line) (*) TARGET (sem_plc-line) ;
SUBSTITUTE (sem_plc-water) (*) TARGET (sem_plc-water) ;
SUBSTITUTE (sem_plc-elevate) (*) TARGET (sem_plc-elevate) ;
SUBSTITUTE (sem_substnc) (*) TARGET (sem_substnc) ;
SUBSTITUTE (sem_sur) (*) TARGET (sem_sur) ;
SUBSTITUTE (sem_route) (*) TARGET (sem_route) ;
SUBSTITUTE (sem_semcon) (*) TARGET (sem_semcon) ;
SUBSTITUTE (sem_time) (*) TARGET (sem_time) ;
SUBSTITUTE (sem_txt) (*) TARGET (sem_txt) ;
SUBSTITUTE (sem_veh) (*) TARGET (sem_veh) ;
SUBSTITUTE (sem_wpn) (*) TARGET (sem_wpn) ;
SUBSTITUTE (sem_wthr) (*) TARGET (sem_wthr) ;
SUBSTITUTE (sem_feat) (*) TARGET (sem_feat) ;
SUBSTITUTE (sem_part) (*) TARGET (sem_part) ;
SUBSTITUTE (sem_tool) (*) TARGET (sem_tool) ;
SUBSTITUTE (sem_tool-catch) (*) TARGET (sem_tool-catch) ;
SUBSTITUTE (sem_feat-phys) (*) TARGET (sem_feat-phys) ;
SUBSTITUTE (sem_clth-part) (*) TARGET (sem_clth-part) ;
SUBSTITUTE (sem_body-abstr) (*) TARGET (sem_body-abstr) ;
SUBSTITUTE (sem_state) (*) TARGET (sem_state) ;
SUBSTITUTE (←vdic→) (*) TARGET (←vdic→) ;
SUBSTITUTE (mwe) (*) TARGET (mwe) ;

SUBSTITUTE SUB:-1 (sem_act) (*) TARGET (sem_act) ;
SUBSTITUTE SUB:-1 (sem_ani) (*) TARGET (sem_ani) ;
SUBSTITUTE SUB:-1 (sem_aniprod) (*) TARGET (sem_aniprod) ;
SUBSTITUTE SUB:-1 (sem_body) (*) TARGET (sem_body) ;
SUBSTITUTE SUB:-1 (sem_build) (*) TARGET (sem_build) ;
SUBSTITUTE SUB:-1 (sem_build-part) (*) TARGET (sem_build-part) ;
SUBSTITUTE SUB:-1 (sem_clth) (*) TARGET (sem_clth) ;
SUBSTITUTE SUB:-1 (sem_clth-jewl) (*) TARGET (sem_clth-jewl) ;
SUBSTITUTE SUB:-1 (sem_ctain) (*) TARGET (sem_ctain) ;
SUBSTITUTE SUB:-1 (sem_curr) (*) TARGET (sem_curr) ;
SUBSTITUTE SUB:-1 (sem_date) (*) TARGET (sem_date) ;
SUBSTITUTE SUB:-1 (sem_edu) (*) TARGET (sem_edu) ;
SUBSTITUTE SUB:-1 (sem_emo) (*) TARGET (sem_emo) ;
SUBSTITUTE SUB:-1 (sem_event) (*) TARGET (sem_event) ;
SUBSTITUTE SUB:-1 (sem_fem) (*) TARGET (sem_fem) ;
SUBSTITUTE SUB:-1 (sem_food) (*) TARGET (sem_food) ;
SUBSTITUTE SUB:-1 (sem_furn) (*) TARGET (sem_furn) ;
SUBSTITUTE SUB:-1 (sem_group) (*) TARGET (sem_group) ;
SUBSTITUTE SUB:-1 (sem_hum) (*) TARGET (sem_hum) ;
SUBSTITUTE SUB:-1 (sem_lang) (*) TARGET (sem_lang) ;
SUBSTITUTE SUB:-1 (sem_mal) (*) TARGET (sem_mal) ;
SUBSTITUTE SUB:-1 (sem_mat) (*) TARGET (sem_mat) ;
SUBSTITUTE SUB:-1 (sem_measr) (*) TARGET (sem_measr) ;
SUBSTITUTE SUB:-1 (sem_money) (*) TARGET (sem_money) ;
SUBSTITUTE SUB:-1 (sem_obj) (*) TARGET (sem_obj) ;
SUBSTITUTE SUB:-1 (sem_obj-clo) (*) TARGET (sem_obj-clo) ;
SUBSTITUTE SUB:-1 (sem_obj-el) (*) TARGET (sem_obj-el) ;
SUBSTITUTE SUB:-1 (sem_org) (*) TARGET (sem_org) ;
SUBSTITUTE SUB:-1 (sem_plant) (*) TARGET (sem_plant) ;
SUBSTITUTE SUB:-1 (sem_perc-emo) (*) TARGET (sem_perc-emo) ;
SUBSTITUTE SUB:-1 (sem_plc) (*) TARGET (sem_plc) ; 
SUBSTITUTE SUB:-1 (sem_sur) (*) TARGET (sem_sur) ;
SUBSTITUTE SUB:-1 (sem_route) (*) TARGET (sem_route) ;
SUBSTITUTE SUB:-1 (sem_semcon) (*) TARGET (sem_semcon) ;
SUBSTITUTE SUB:-1 (sem_txt) (*) TARGET (sem_txt) ;
SUBSTITUTE SUB:-1 (sem_time) (*) TARGET (sem_time) ;
SUBSTITUTE SUB:-1 (sem_txt) (*) TARGET (sem_txt) ;
SUBSTITUTE SUB:-1 (sem_veh) (*) TARGET (sem_veh) ;
SUBSTITUTE SUB:-1 (sem_wpn) (*) TARGET (sem_wpn) ;
SUBSTITUTE SUB:-1 (sem_wthr) (*) TARGET (sem_wthr) ;
SUBSTITUTE SUB:-1 (←vdic→) (*) TARGET (←vdic→) ;

	#=====#
      END #
	#=====#