#!/bin/bash

set -e -u

declare -r BASEURL="http://wiki.apertium.org/wiki/Northern_Sámi_and_Norwegian"

if [[ $# -lt 3 || $# -gt 4 ]]; then
    echo "Usage: wiki-tests.sh {Regression,Pending} SRCLANG trglang [update]"
    exit 2
fi
declare -r TESTTYPE="$1_tests"
declare -r SRCLANG="$2"
declare -r TRGLANG="$3"
if [[ $# -eq 4 ]]; then
    declare -r UPDATE="$4"
else
    declare -r UPDATE=
fi
declare -r MODE="$SRCLANG-$TRGLANG"
declare -r HTML="$(dirname $0)/${TESTTYPE}.html"


# Workarounds for Mac's:
SED=sed
if [[ "$(uname -s)" = Darwin ]]; then
	SED=gsed
fi
declare -r SED



fetchtests () {
    if [[ "${UPDATE}" = update ]]; then
	tmp=$(mktemp -t wiki-tests.html.XXXXXXXXXX)
	wget -O "${tmp}" -q "${BASEURL}/${TESTTYPE}"
	if [[ -s "${tmp}" ]]; then
	    mv "${tmp}" "${HTML}"
	else
	    rm "${tmp}"
	    echo "Couldn't fetch ${BASEURL}/${TESTTYPE}" >&2
	fi
    fi

    if [[ ! -s "${HTML}" ]]; then
	echo "${HTML} does not exist or is empty (use 'update' option)" >&2
	exit 1
    fi
}

cleantst () {
    $SED 's/^ *//; s/ *$//; s/\([^,.?!:;]\)$/\1./g; s/   */ /g'
}
cleansrc () {
    grep -o "<li> (${SRCLANG})[^→]*" |$SED "s%</*[^>]*>%%g; s% *(${SRCLANG}) *%%" | cleantst
}
cleantrg () {
    grep -o "<li> (${SRCLANG}).*" | $SED 's%[^→]*→ *%%'  | cleantst
}

summary () {
    # Output the MT vs ref translations:
    declare -i total=0
    declare -i correct=0
    declare -r sep=''
    while IFS="${sep}" read -r src trg tst; do
	if [[ "${trg}" = "${tst}" ]]; then
	    printf "%s\t  %s\nWORKS\t  %s\n\n\n" "${MODE}" "${src}" "${tst}"
	    (( ++correct ))
	else
	    (( 1 ))
	    printf "%s\t  %s\n\t- %s\n\t+ %s\n\n\n" "${MODE}" "${src}" "${trg}" "${tst}"
	fi
	(( ++total ))
    done < <(paste -d "${sep}" "${srclist}" "${trglist}" "${tstlist}")

    # Output the sums:
    pct=
    if command -V calc &>/dev/null; then
	pct=$(calc -p "${correct} / ${total} * 100")
	pct=", ${pct}%"
    fi
    echo "${correct} / ${total}${pct}"
}

showrevisions () {
    ( svn info 2>/dev/null || git svn info  ) | grep ^Revision
    grep ^AP_SRC "$(dirname $0)/../config.log" | while IFS='=' read -r var dir; do
	printf "%s " "${var}"
	( cd "${dir//\'}"; ( svn info 2>/dev/null || git svn info  ) | grep ^Revision )
    done
}

cleanup () {
    echo
    #rm -f "${srclist}" "${trglist}" "${tstlist}"
}
trap 'cleanup' EXIT
srclist=$(mktemp -t "tmp.${SRCLANG}-src.XXXXXXXXXX")
trglist=$(mktemp -t "tmp.${SRCLANG}-trg.XXXXXXXXXX")
tstlist=$(mktemp -t "tmp.${SRCLANG}-tst.XXXXXXXXXX")

showrevisions
printf "Running $1-tests with mode \"${MODE}\" "; [[ -n "${UPDATE}" ]] && printf "with updated tests "; echo "..."
echo
fetchtests
cleansrc < "${HTML}" > "${srclist}"
cleantrg < "${HTML}" > "${trglist}"
(
    set -o pipefail
    apertium -d . "${MODE}" < "${srclist}" | cleantst > "${tstlist}"
)
summary
